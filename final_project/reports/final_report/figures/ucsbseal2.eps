%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 9.0%%For: (steven brown) (UCSB Artworks)%%Title: (ucseal.eps)%%CreationDate: 12/1/02 4:18 PM%%BoundingBox: 200 289 412 502%%HiResBoundingBox: 200.3999 289.5 411.7998 501.1001%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 30 31 582 759%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 300%AI5_NumLayers: 4%AI8_OpenToView: 146.5 563.5 3 1009 720 18 0 1 7 40 0 0%AI5_OpenViewLayers: 7777%%PageOrigin:30 31%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -33 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp3 Bn%AI5_BeginGradient: (Black & White)(Black & White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Red & Yellow)(Red & Yellow) 0 2 Bd[0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999>01 %_Br[0 1 0.6 0 1 50 100 %_BS%_0 1 0.6 0 1 50 100 Bs0 0 1 0 1 50 0 %_BS%_0 0 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Blue Radial)(Yellow & Blue Radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_BS%_0 0.08 0.67 0 1 50 14 Bs1 1 0 0 1 50 100 %_BS%_1 1 0 0 1 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Yellow Stripe)(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [%AI3_Tile(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 3.6 w 4 M []0 d0 XR8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) Pc1 g(K=0) Pc0 g(K=100) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.75 g(K=25) Pc0.5 g(K=50) Pc0.25 g(K=75) Pc0 g(K=100) PcBb2 (Black & White) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black & White) Pc0.25 0 0 0 k(C=25 M=0 Y=0 K=0) Pc0.5 0 0 0 k(C=50 M=0 Y=0 K=0) Pc0.75 0 0 0 k(C=75 M=0 Y=0 K=0) Pc1 0 0 0 k(C=100 M=0 Y=0 K=0) Pc0.25 0.25 0 0 k(C=25 M=25 Y=0 K=0) Pc0.5 0.5 0 0 k(C=50 M=50 Y=0 K=0) Pc0.75 0.75 0 0 k(C=75 M=75 Y=0 K=0) Pc1 1 0 0 k(C=100 M=100 Y=0 K=0) PcBb2 (Red & Yellow) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Red & Yellow) Pc0 0.25 0 0 k(C=0 M=25 Y=0 K=0) Pc0 0.5 0 0 k(C=0 M=50 Y=0 K=0) Pc0 0.75 0 0 k(C=0 M=75 Y=0 K=0) Pc0 1 0 0 k(C=0 M=100 Y=0 K=0) Pc0 0.25 0.25 0 k(C=0 M=25 Y=25 K=0) Pc0 0.5 0.5 0 k(C=0 M=50 Y=50 K=0) Pc0 0.75 0.75 0 k(C=0 M=75 Y=75 K=0) Pc0 1 1 0 k(C=0 M=100 Y=100 K=0) PcBb0 0 0 0 Bh2 (Yellow & Blue Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Yellow & Blue Radial) Pc0 0 0.25 0 k(C=0 M=0 Y=25 K=0) Pc0 0 0.5 0 k(C=0 M=0 Y=50 K=0) Pc0 0 0.75 0 k(C=0 M=0 Y=75 K=0) Pc0 0 1 0 k(C=0 M=0 Y=100 K=0) Pc0.25 0 0.25 0 k(C=25 M=0 Y=25 K=0) Pc0.5 0 0.5 0 k(C=50 M=0 Y=50 K=0) Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0) Pc1 0 1 0 k(C=100 M=0 Y=100 K=0) Pc(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Yellow Stripe) Pc0.25 0.125 0 0 k(C=25 M=13 Y=0 K=0) Pc0.5 0.25 0 0 k(C=50 M=25 Y=0 K=0) Pc0.75 0.375 0 0 k(C=75 M=38 Y=0 K=0) Pc1 0.5 0 0 k(C=100 M=50 Y=0 K=0) Pc0.125 0.25 0 0 k(C=13 M=25 Y=0 K=0) Pc0.25 0.5 0 0 k(C=25 M=50 Y=0 K=0) Pc0.375 0.75 0 0 k(C=38 M=75 Y=0 K=0) Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0 0.25 0.125 0 k(C=0 M=25 Y=13 K=0) Pc0 0.5 0.25 0 k(C=0 M=50 Y=25 K=0) Pc0 0.75 0.375 0 k(C=0 M=75 Y=38 K=0) Pc0 1 0.5 0 k(C=0 M=100 Y=50 K=0) Pc0 0.125 0.25 0 k(C=0 M=13 Y=25 K=0) Pc0 0.25 0.5 0 k(C=0 M=25 Y=50 K=0) Pc0 0.375 0.75 0 k(C=0 M=38 Y=75 K=0) Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.125 0 0.25 0 k(C=13 M=0 Y=25 K=0) Pc0.25 0 0.5 0 k(C=25 M=0 Y=50 K=0) Pc0.375 0 0.75 0 k(C=38 M=0 Y=75 K=0) Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0) Pc0.25 0 0.125 0 k(C=25 M=0 Y=13 K=0) Pc0.5 0 0.25 0 k(C=50 M=0 Y=25 K=0) Pc0.75 0 0.375 0 k(C=75 M=0 Y=38 K=0) Pc1 0 0.5 0 k(C=100 M=0 Y=50 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.25 0.125 0.125 0 k(C=25 M=13 Y=13 K=0) Pc0.5 0.25 0.25 0 k(C=50 M=25 Y=25 K=0) Pc0.75 0.375 0.375 0 k(C=75 M=38 Y=38 K=0) Pc1 0.5 0.5 0 k(C=100 M=50 Y=50 K=0) Pc0.25 0.25 0.125 0 k(C=25 M=25 Y=13 K=0) Pc0.5 0.5 0.25 0 k(C=50 M=50 Y=25 K=0) Pc0.75 0.75 0.375 0 k(C=75 M=75 Y=38 K=0) Pc1 1 0.5 0 k(C=100 M=100 Y=50 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.125 0.25 0.125 0 k(C=13 M=25 Y=13 K=0) Pc0.25 0.5 0.25 0 k(C=25 M=50 Y=25 K=0) Pc0.375 0.75 0.375 0 k(C=38 M=75 Y=38 K=0) Pc0.5 1 0.5 0 k(C=50 M=100 Y=50 K=0) Pc0.125 0.25 0.25 0 k(C=13 M=25 Y=25 K=0) Pc0.25 0.5 0.5 0 k(C=25 M=50 Y=50 K=0) Pc0.375 0.75 0.75 0 k(C=38 M=75 Y=75 K=0) Pc0.5 1 1 0 k(C=50 M=100 Y=100 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.125 0.125 0.25 0 k(C=13 M=13 Y=25 K=0) Pc0.25 0.25 0.5 0 k(C=25 M=25 Y=50 K=0) Pc0.375 0.375 0.75 0 k(C=38 M=38 Y=75 K=0) Pc0.5 0.5 1 0 k(C=50 M=50 Y=100 K=0) Pc0.25 0.125 0.25 0 k(C=25 M=13 Y=25 K=0) Pc0.5 0.25 0.5 0 k(C=50 M=25 Y=50 K=0) Pc0.75 0.375 0.75 0 k(C=75 M=38 Y=75 K=0) Pc1 0.5 1 0 k(C=100 M=50 Y=100 K=0) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 0 0 0 1 0 79 128 255 0 100 Lb(Background) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Guides) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Foreground) Ln0 ALB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(100) Ln0 A300 Ar0 O0 0 0 0 k0 J 0 j 1 w 3.8636 M []0 d0 XR221.5 444.7998 m222.2002 446.1001 223.3999 448.1001 223.7002 448.2002 c224.2002 448.3999 227.8999 455.7998 230.7998 457.8999 c233.6001 460 233.7002 461.2002 234 461.7002 c234.3999 462.2002 241 469.5 243.6001 470.7998 c246.2002 472 245.3999 471.7002 246.6001 473.2002 c247.7998 474.7998 258.8999 481.7002 261.6001 482.7002 c264.2002 483.7998 265.7998 484.8999 y279.8999 491 283.7002 491 v287.6001 491 288.2998 492.1001 288.7998 492.1001 c289.3999 492.1001 304.5 494.2002 306.1001 493.6001 c312.2002 494 315.4004 493.1001 v318.5996 492.2002 317.2998 492.7998 318.7998 492.7998 c320.2002 492.7998 323.9004 492.2002 324.5996 491.7002 c325.2998 491.2002 326.5 491.3999 y329.7998 491.2002 330 490.5 v330.2002 489.7998 330.9004 490.1001 331.5996 490.1001 c332.2998 490.1001 337.2002 489.5 339.7002 487.5 c344.7998 483.3999 347.5996 484.2998 348.5 483.7998 c349.4004 483.2998 349.4004 484 350.5996 482.7002 c351.7998 481.5 353.7998 481 y360.5 477 359.7998 477.2998 v359.9004 477.2002 361.2002 476.8999 362.2002 475.8999 c362.5 475.6001 367.7002 473.6001 370.7998 468.7998 c372.2998 468 372.4004 467.2002 v372.5996 466.5 373.7002 466.3999 y380.5 463.5 382.0996 456.8999 v382.2998 456.2002 383.9004 455.1001 y387.2002 451.1001 388.0996 448.6001 v388.5996 447.2002 389.5 445.7998 390.2002 444.7998 c362.0996 444.7998 L362.0996 444.8999 362 444.8999 v358.9004 448.3999 356.7998 450.8999 y354.7002 453 353.5996 453.7002 v352.5 454.3999 349.7002 454.7998 349.7002 455.7998 c349.7002 456.8999 345.4004 461.1001 340.9004 462.1001 c336.4004 463.2002 334 465.2002 y329.2998 468.5 326.7998 467.7998 v324.4004 467.1001 321.7002 468.1001 320.9004 469.2002 c320.2002 470.1001 303.2998 472.7002 300.3999 470.2002 c297.6001 467.7998 292.3999 469.5 y285 469.2002 284.2998 467.1001 v283.6001 465 280.3999 465.2998 280 465.2998 c279.7002 465.2998 269.7998 463.6001 263.7998 457.2002 c257.8999 450.8999 256.7998 451.8999 255.8999 450.8999 c255 449.7998 250.8999 447.1001 249.7998 444.8999 c249.7002 444.8999 249.7002 444.7998 y221.5 444.7998 Lf249.7002 444.7998 m248.7002 442.8999 246.2002 440.2998 y238.1001 430.5 238.1001 424.7998 v238.1001 419.2002 235.7002 421.7002 234.6001 417.1001 c233.6001 412.5 232.5 409.2998 y231 400.7002 231.2998 396 v208.5 396 L208.6001 396.5 208.6001 396.8999 208.6001 397 c208.6001 397.7002 208.7998 400.3999 y208.7998 408.6001 209.6001 409.7002 v210.5 410.7998 210.2998 415.2002 y212.2998 425 213.2998 426.2002 v214.3999 427.5 214.3999 429.2002 y218.2998 440 219.7002 441.2002 v221.1001 442.3999 220.8999 443.7002 y221.1001 444.1001 221.5 444.7998 v249.7002 444.7998 Lf390.2002 444.7998 m390.7998 444 391.2998 443.3999 y394.2998 436.3999 396 434.2002 v397.7998 431.8999 397.5996 430.1001 y401.2998 424.2998 400.9004 419 v400.7998 417.1001 401.7998 415.7002 y402.4004 410 402.9004 407.3999 v403.7998 402.7998 403.0996 404.8999 y402.9004 400.5 403.4004 396 v380.7998 396 L380.7998 396.2002 381 402 380.4004 404.3999 c379.5996 406.8999 379.5996 409 y378.5996 415.7002 377.5 417.7998 v376.5 419.8999 375.7998 422.7002 y373.2998 430.1001 371.5996 431.8999 v369.7998 433.6001 368.7002 436.7998 y365.2998 441.2998 362.0996 444.7998 v390.2002 444.7998 Lf231.2998 396 m231.3999 395.6001 231.3999 395.2002 231.5 394.9004 c232.2002 390.7002 231.7998 388.5996 y232.6001 385.7998 233.5 382.2002 V209.7002 379.7998 L209.2998 382.2002 208.8999 384.7998 208.8999 385.9004 c208.8999 388.4004 209 390.5 208.6001 391.0996 c208.2998 391.5 208.5 394.4004 208.5 396 c231.2998 396 Lf389.0996 347.2002 m388.4004 345.5996 387.9004 344.4004 y386.5 342.7998 384.4004 338.2002 v383.5996 336.4004 381.9004 335.2002 381.2002 333.7998 c380.5 332.4004 375.2002 330.2998 375.2002 328.4004 c375.2002 328 372.0996 326.0996 y366.2998 321 362.5996 316.4004 v361.5 315.0996 360.7998 315.4004 360.0996 314.7002 c359.4004 314 352.5 309.7002 350.4004 309 c348.2998 308.2998 346.2002 307.0996 y344.0996 306 339.2002 304.2998 V336.2002 303.2002 L333.2002 302.5 332.5 302 y322.0996 299 319.7998 299.2002 v317.5 299.2998 317.5 299.2002 317 298.7998 c316.5 298.5 305.8999 298.0996 304 298.5 c302 298.7998 301.2998 298.5996 y292.3999 298.7998 290.8999 299.7002 v289.5 300.5996 286.3999 300.4004 y276.5 302.2998 275.6001 303.4004 V272.6001 304.2998 L269.6001 305.0996 267.7002 306 264.5 307.7998 C264.3999 307.7998 259.7002 310.2002 259.6001 310.2998 c256 311.7998 252.7002 314.4004 y243 321.0996 241 323.5 v238.8999 325.7998 238.6001 325.5 238.1001 325.7998 c237.5 326.2002 236 328 y233.8999 330.0996 233 331.4004 v232.2002 332.5996 226.7998 338.4004 224.6001 342.2998 c223.2002 344.7002 222.2002 346.4004 221.6001 347.2002 c248.7998 347.2002 L253.3999 341.9004 254.7002 341.4004 y263.1001 333.2998 265.8999 332.2998 v268.7998 331.2002 272.5 328.7998 272.6001 328.7002 C276.8999 325.9004 L277.5 325 279 323.7002 283.7998 323.4004 c288.7002 323 303 321.5996 306.1001 320.7998 c309.2002 320 313.4004 320 314.5 320.7998 c315.7002 321.5996 320 323.2002 321.5 322.7002 c323 322.0996 327.2002 322.9004 Y332.5 324.7002 L335.5996 326.7998 340.9004 327.2002 y342.2998 327.7002 343 328.9004 v343.7002 330.0996 347.0996 332.5996 347.7998 332.2998 c348.5 331.9004 352.7998 336.2998 353.0996 337.5 c353.4004 339.5 359.2998 342.0996 360.5996 344 c361.4004 345.2002 362.0996 346.2002 362.9004 347.2002 c389.0996 347.2002 Lf221.6001 347.2002 m221.2998 347.7998 221.2002 348 y220.2002 349.5996 219 351.9004 v218.3999 353.0996 217.5 354.7002 216.7002 357.0996 c214.8999 361.7998 214.3999 362.2002 y212.1001 368.9004 211.8999 370.0996 v211.7002 371.2998 211.3999 374.0996 210.8999 374.5 c210.6001 374.7002 210.1001 377.0996 209.6001 379.7998 C233.5 382.2002 L234.3999 378.5 235.5 374.0996 236 371 c237.1001 364.5996 238.5 365 y238.7002 362.0996 240.3999 358.5996 v241.5 356.0996 243.5 353.5996 246.2002 350.2002 c247.2002 349.0996 248 348.0996 248.7998 347.2002 c221.6001 347.2002 Lf362.9004 347.2002 m363.9004 348.5996 364.9004 349.9004 365.9004 351.0996 c367.7002 353.2002 369.7002 355 370.0996 356.2002 c370.7002 357.7998 373.0996 364.0996 373.5 365.5 c373.7998 366.9004 376.7998 372 y379.5996 378.7002 379.2998 380.5 v378.9004 382.2002 380 384.4004 y380.7002 391.7002 l380.7998 396 l380.7998 396 l403.4004 396 L403.4004 395.4004 403.5 394.7002 403.5996 394 c403.7998 392.2002 403.5996 391 y403.2002 382.5996 402.5 380.2998 v401.7998 378 402 377.7002 y400.5 372.4004 399 366.2002 v398.5 364.0996 396.7002 363.9004 396.7002 362.9004 c396.7002 361.7998 394.0996 358.2002 392.0996 354.2998 c391.5996 353.2002 390.2002 349.7002 389.0996 347.2002 c362.9004 347.2002 Lf0 R0 0 0 0 K1 J 10 M233.5 382.2002 m234.3999 378.5 235.5 374.0996 236 371 c237.1001 364.5996 238.5 365 y238.7002 362.0996 240.3999 358.5996 v241.5 356.0996 243.5 353.5996 246.2002 350.2002 c252.8999 342.0996 254.7002 341.4004 y263.1001 333.2998 265.8999 332.2998 v268.7998 331.2002 272.5 328.7998 272.6001 328.7002 C276.8999 325.9004 L277.5 325 279 323.7002 283.7998 323.4004 c288.7002 323 303 321.5996 306.1001 320.7998 c309.2002 320 313.4004 320 314.5 320.7998 c315.7002 321.5996 320 323.2002 321.5 322.7002 c323 322.0996 327.2002 322.9004 Y332.5 324.7002 L335.5996 326.7998 340.9004 327.2002 y342.2998 327.7002 343 328.9004 v343.7002 330.0996 347.0996 332.5996 347.7998 332.2998 c348.5 331.9004 352.7998 336.2998 353.0996 337.5 c353.4004 339.5 359.2998 342.0996 360.5996 344 c362.4004 346.7002 364.2002 349 365.9004 351.0996 c367.7002 353.2002 369.7002 355 370.0996 356.2002 c370.7002 357.7998 373.0996 364.0996 373.5 365.5 c373.7998 366.9004 376.7998 372 y379.5996 378.7002 379.2998 380.5 v378.9004 382.2002 380 384.4004 y380.7002 391.7002 l380.7998 396 l381.0996 402 380.4004 404.3999 v379.5996 406.8999 379.5996 409 y378.5996 415.7002 377.5 417.7998 v376.5 419.8999 375.7998 422.7002 y373.2998 430.1001 371.5996 431.8999 v369.7998 433.6001 368.7002 436.7998 y365.2002 441.3999 362 444.8999 v358.9004 448.3999 356.7998 450.8999 y354.7002 453 353.5996 453.7002 v352.5 454.3999 349.7002 454.7998 349.7002 455.7998 c349.7002 456.8999 345.4004 461.1001 340.9004 462.1001 c336.4004 463.2002 334 465.2002 y329.2998 468.5 326.7998 467.7998 v324.4004 467.1001 321.7002 468.1001 320.9004 469.2002 c320.2002 470.1001 303.2998 472.7002 300.3999 470.2002 c297.6001 467.7998 292.3999 469.5 y285 469.2002 284.2998 467.1001 v283.6001 465 280.3999 465.2998 280 465.2998 c279.7002 465.2998 269.7998 463.6001 263.7998 457.2002 c257.8999 450.8999 256.7998 451.8999 255.8999 450.8999 c255 449.7998 250.8999 447.1001 249.7998 444.8999 c248.7998 443 246.2002 440.2998 y238.1001 430.5 238.1001 424.7998 v238.1001 419.2002 235.7002 421.7002 234.6001 417.1001 c233.6001 412.5 232.5 409.2998 y230.7998 399.1001 231.5 394.9004 v232.2002 390.7002 231.7998 388.5996 y232.6001 385.7998 233.5 382.2002 V209.7002 379.7998 L209.2998 382.2002 208.8999 384.7998 208.8999 385.9004 c208.8999 388.4004 209 390.5 208.6001 391.0996 c208.2998 391.5996 208.6001 396.2998 208.6001 397 c208.6001 397.7002 208.7998 400.3999 y208.7998 408.6001 209.6001 409.7002 v210.5 410.7998 210.2998 415.2002 y212.2998 425 213.2998 426.2002 v214.3999 427.5 214.3999 429.2002 y218.2998 440 219.7002 441.2002 v221.1001 442.3999 220.8999 443.7002 y223.2002 448.1001 223.7002 448.2002 v224.2002 448.3999 227.8999 455.7998 230.7998 457.8999 c233.6001 460 233.7002 461.2002 234 461.7002 c234.3999 462.2002 241 469.5 243.6001 470.7998 c246.2002 472 245.3999 471.7002 246.6001 473.2002 c247.7998 474.7998 258.8999 481.7002 261.6001 482.7002 c264.2002 483.7998 265.7998 484.8999 y279.8999 491 283.7002 491 v287.6001 491 288.2998 492.1001 288.7998 492.1001 c289.3999 492.1001 304.5 494.2002 306.1001 493.6001 c312.2002 494 315.4004 493.1001 v318.5996 492.2002 317.2998 492.7998 318.7998 492.7998 c320.2002 492.7998 323.9004 492.2002 324.5996 491.7002 c325.2998 491.2002 326.5 491.3999 y329.7998 491.2002 330 490.5 v330.2002 489.7998 330.9004 490.1001 331.5996 490.1001 c332.2998 490.1001 337.2002 489.5 339.7002 487.5 c344.7998 483.3999 347.5996 484.2998 348.5 483.7998 c349.4004 483.2998 349.4004 484 350.5996 482.7002 c351.7998 481.5 353.7998 481 y360.5 477 359.7998 477.2998 v359.9004 477.2002 361.2002 476.8999 362.2002 475.8999 c362.5 475.6001 367.7002 473.6001 370.7998 468.7998 c372.2998 468 372.4004 467.2002 v372.5996 466.5 373.7002 466.3999 y380.5 463.5 382.0996 456.8999 v382.2998 456.2002 383.9004 455.1001 y387.2002 451.1001 388.0996 448.6001 v389 446.1001 391.2998 443.3999 y394.2998 436.3999 396 434.2002 v397.7998 431.8999 397.5996 430.1001 y401.2998 424.2998 400.9004 419 v400.7998 417.1001 401.7998 415.7002 y402.4004 410 402.9004 407.3999 v403.7998 402.7998 403.0996 404.8999 y402.9004 399.1001 403.5996 394 v403.7998 392.2002 403.5996 391 y403.2002 382.5996 402.5 380.2998 v401.7998 378 402 377.7002 y400.5 372.4004 399 366.2002 v398.5 364.0996 396.7002 363.9004 396.7002 362.9004 c396.7002 361.7998 394.0996 358.2002 392.0996 354.2998 c391.2998 352.5 387.9004 344.4004 y386.5 342.7998 384.4004 338.2002 v383.5996 336.4004 381.9004 335.2002 381.2002 333.7998 c380.5 332.4004 375.2002 330.2998 375.2002 328.4004 c375.2002 328 372.0996 326.0996 y366.2998 321 362.5996 316.4004 v361.5 315.0996 360.7998 315.4004 360.0996 314.7002 c359.4004 314 352.5 309.7002 350.4004 309 c348.2998 308.2998 346.2002 307.0996 y344.0996 306 339.2002 304.2998 V336.2002 303.2002 L333.2002 302.5 332.5 302 y322.0996 299 319.7998 299.2002 v317.5 299.2998 317.5 299.2002 317 298.7998 c316.5 298.5 305.8999 298.0996 304 298.5 c302 298.7998 301.2998 298.5996 y292.3999 298.7998 290.8999 299.7002 v289.5 300.5996 286.3999 300.4004 y276.5 302.2998 275.6001 303.4004 V272.6001 304.2998 L269.6001 305.0996 267.7002 306 264.5 307.7998 C264.3999 307.7998 259.7002 310.2002 259.6001 310.2998 c256 311.7998 252.7002 314.4004 y243 321.0996 241 323.5 v238.8999 325.7998 238.6001 325.5 238.1001 325.7998 c237.5 326.2002 236 328 y233.8999 330.0996 233 331.4004 v232.2002 332.5996 226.7998 338.4004 224.6001 342.2998 c222.3999 346.2002 221.2002 348 y220.2002 349.5996 219 351.9004 v218.3999 353.0996 217.5 354.7002 216.7002 357.0996 c214.8999 361.7998 214.3999 362.2002 y212.1001 368.9004 211.8999 370.0996 v211.7002 371.2998 211.3999 374.0996 210.8999 374.5 c210.6001 374.7002 210.1001 377.0996 209.6001 379.7998 C233.5 382.2002 Lsu0 O0 0 0 1 k317 458.7998 m309.2002 462 l318.4004 447.5 l317 458.7998 lfU0 R0 0 0 1 K0 J 0.5 w305.6001 438.2002 m293.3999 322.5996 lS306.1001 320.7998 m306.7998 436.2002 lS303.2998 440.5 m261 336.7002 lS0 O0 0 0 0 k0.7 w292.7002 463.3999 m275.1001 462 lB294.7998 460.6001 m255.3999 448.6001 lB296.2002 458.3999 m236.7002 419.3999 lB297.6001 455.6001 m232.2002 398.2998 lB297.6001 450.7002 m234.2998 381.4004 lB298.2998 446.5 m239.8999 364.7998 lB378.2002 376.7998 m320.2998 450.6001 lB320.2998 450.6001 m320.2002 450.7002 l380.7002 394.7002 lB303.2998 447.8999 m247.6001 350 lB279.2998 324.7002 m306.7002 449.1001 lB308.5996 448.8999 m321 323 lB312.4004 447.2002 m338.0996 327.2002 lB315.2002 445.1001 m353.5996 338.4004 lB318.7998 445.1001 m365.2002 350 lB320.9004 445.7998 m372.5996 363.4004 lB319.5 455.6001 m377.9004 415.8999 lB319.5 457.7002 m368.7002 435.8999 lB321.5996 459.2002 m342 457 lBu0.9 w257 444.8999 m254.8999 352.2998 l299.2002 350.5996 l299.8999 355.5 305.2002 355.5 v310.5 355.5 311.5 351.2998 311.2002 350.2002 c310.7998 349.2002 351.7002 348.0996 y355.5 442.1001 l351.2998 440.7002 349.9004 442.1001 v348.5 443.5 345 443.1001 y341.5 441.7002 339.7002 441.3999 v337.9004 441 331.5996 440.2998 329.5 442.1001 c327.4004 443.7998 320.7002 443.5 318.5996 443.5 c316.5 443.5 310.7998 441.7002 310.5 440.7002 c310.0996 439.6001 306.5996 438.2002 307 436.7998 c307.2998 435.3999 304.7998 440.2998 303.3999 441.3999 c302 442.3999 299.2002 444.8999 297.7998 444.5 c296.3999 444.2002 287.2002 445.2002 285.1001 444.5 c283 443.7998 278.1001 443.5 276.2998 443.7998 c274.6001 444.2002 266.1001 443.1001 264.7002 444.2002 c263.2998 445.2002 261.6001 444.8999 260.1001 445.2002 c258.7002 445.6001 257 444.8999 ybU0.5 w307 436.7998 m305.2002 355.5 lSu273.2002 437.5 m281.6001 437.5 l281.6001 426.8999 l273.2002 426.8999 l273.2002 437.5 lsUu0.3 w260.1001 445.2002 m258.7002 355.0996 l294.6001 353.7002 l299.6001 352 lSU261.8999 444.8999 m260.7998 356.5 l296 354.7998 l299.2002 353.7002 299.6001 352 vS263.7002 443.7998 m263 358 l297.5 355.7998 l300.6001 354.4004 300.6001 353.4004 vS266.1001 443.7998 m265.3999 359.4004 l298.8999 358 l303.3999 356.9004 302.7002 355.5 vS0.4 w268.8999 442.7998 m267.5 360.7998 l299.8999 359.4004 l303.3999 358.2998 303.3999 356.5 vS0.3 w275.2998 440.7002 m280.6001 441 lS284.1001 441.3999 m286.8999 441.7002 lS289.7002 441.3999 m293.6001 441.7002 lS296.3999 441 m298.8999 440.2998 300.2998 439.2998 vS302.7002 437.5 m306.2998 433.6001 306.2998 432.6001 vS282.7002 437.2002 m284.7998 437.5 lS286.5 437.5 m289.3999 437.5 lS290.7998 437.5 m293.8999 436.7998 lS295.2998 437.2002 m298.5 436.3999 298.8999 435.3999 vS301.2998 434.7002 m305.2002 431.8999 305.6001 430.7998 vS286.2002 434.2998 m289.3999 434.2998 lS291.5 434 m293.8999 433.2998 lS297.1001 432.8999 m299.8999 431.5 lS302.3999 430.7998 m305.8999 427.7002 lS350.5996 442.1001 m348.4004 353.4004 l319.2998 353.7002 l312.2002 353 312.2002 351.5996 vS348.9004 442.1001 m347.2002 355.0996 l318.2002 354.7998 l314.4004 354.4004 312.9004 353 vS347.5 442.7998 m345.7998 356.5 l317.5 355.7998 l312.2002 355.0996 311.2002 353 vS346.2002 442.7998 m344.0996 358 l315.4004 356.5 l310.7998 355.5 310.0996 353.4004 vS285.5 430.5 m287.2002 430.5 lS289.3999 430.5 m292.8999 430.1001 lS295 429.7998 m299.8999 428.7002 lS301.2998 428 m305.2002 426.8999 306.2998 423.3999 vS272.5 423.1001 m273.8999 423.1001 lS275.6001 423.1001 m282 423.1001 lS283.7002 422.7002 m285.7998 423.3999 lS288.2998 423.1001 m292.5 422.7002 lS295 422.3999 m299.6001 422.7002 301.2998 420.2998 vS302.7002 420.2998 m305.8999 418.5 305.8999 417.1001 vS283.7002 426.8999 m287.6001 427.2998 lS290.3999 426.8999 m291.5 426.8999 294.2998 426.2002 yS296.7998 426.6001 m299.8999 425.2002 lS301.2998 424.5 m306.2998 422 306.2998 420.6001 vS272.7998 419.8999 m275.2998 419.8999 lS277.7002 419.8999 m286.5 419.8999 lS289 419.8999 m291.1001 419.8999 lS293.8999 419.6001 m299.6001 418.8999 299.8999 417.7998 vS301.7002 417.1001 m305.2002 416.3999 305.8999 413.8999 vS272.1001 416.7002 m274.2002 416.7002 lS275.6001 416.7002 m281.6001 416.3999 lS283.7002 416.3999 m285.5 416.3999 lS288.7002 416 m291.7998 416 lS293.8999 416 m299.2002 415 299.8999 413.8999 vS301.7002 413.2002 m304.7998 412.2002 305.2002 411.1001 vS272.5 413.2002 m277.7002 413.2002 lS280.6001 413.6001 m286.2002 413.6001 lS287.8999 413.6001 m289.7002 413.2002 lS293.2002 412.8999 m300.6001 411.7998 301 410.7998 vS303.1001 410.1001 m306.2998 407.8999 305.8999 406.8999 vS271.7998 410.1001 m274.8999 410.1001 lS276.7002 410.3999 m284.7998 410.3999 lS286.2002 410.1001 m288.7002 409.7002 lS292.2002 409.2998 m301.2998 408.6001 301.2998 407.2002 vS302.3999 406.8999 m305.2002 405.7998 305.8999 403.3999 vS271.3999 407.8999 m274.7998 407.3999 275.2998 407.3999 vS277 407.3999 m276.7002 406.8999 282.7002 407.2002 284.3999 406.7002 cS286.2002 406.8999 m287.7998 406.7002 lS290.3999 406 m294.5 406.7002 304.5 403.2002 306.2998 400.7002 cS270.7002 403.8999 m270.7002 404.7998 276.2002 403.8999 277.2002 403.7002 cS279 403.3999 m281.7998 403.3999 lS284.2998 403.5 m286.8999 403.8999 287.6001 403 vS289 403.2002 m289.5 403 295.2998 403.3999 297.7998 401.1001 cS300.3999 401.2002 m304 400.3999 305.7002 397.8999 vS271.8999 400.5 m273.8999 400.5 lS276.2002 400.5 m283.3999 401.1001 283.7002 400.2002 vS286.3999 400.3999 m290.8999 399.5 lS292.5 400 m299 398.7998 299.2002 397.8999 vS300.2998 398.1001 m304 397.2002 305.6001 395.0996 vS270.5 397.6001 m272.6001 397.2002 lS274.2002 396.7998 m281.7998 397.2002 283.2002 396.2998 vS285 396.5 m287.3999 396.7998 287.7998 396.2998 vS289.8999 396.7998 m296.2002 396.7998 298.7002 395.0996 vS299.7002 394.9004 m304 394.4004 305.7002 391.7002 vS271.3999 394 m276.6001 394.4004 275.2998 394.4004 vS278.3999 394.4004 m281.7998 394 282.7002 394.2002 283.8999 394 cS285.5 394.7002 m287.1001 394.5996 lS289.7002 393.9004 m293.7998 394.5996 303.7998 391 305.6001 388.5996 cS270 391.7002 m270 392.5996 275.5 391.7002 276.5 391.5996 cS278.2998 391.2002 m281.1001 391.2002 lS283.6001 391.4004 m286.2002 391.7002 286.8999 390.9004 vS288.2998 391 m288.7998 390.9004 294.6001 391.2002 297.1001 388.9004 cS299.7002 389.0996 m303.2998 388.2002 305 385.7998 vS271.2002 388.4004 m273.2002 388.4004 lS275.6001 387.9004 m282.5 388.2002 282.7998 387.2998 vS285.7002 388.2002 m290.2002 387.2998 lS291.7998 387.9004 m298.2998 386.5996 298.5 385.7998 vS299.6001 385.9004 m303.2998 385.0996 304.7998 382.9004 vSu270.7002 384.9004 m272.7998 384.5 lSU274.7998 384.7002 m281.1001 385.0996 282.5 384.2002 vS284.2998 384.4004 m286.7002 384.7002 287.1001 384.2002 vS289.2002 384.7002 m295.5 384.7002 298 382.9004 vS299 382.7998 m303.2998 382.2002 305 379.5996 vS270.2002 382.2002 m273.5 381.7002 274 381.7002 vS275.7998 381.7002 m276.5 382.0996 280 381.2002 282.1001 381 cS285 381.2002 m286.5 381 lS289.2002 380.2998 m293.2002 381 303.2998 377.5 305 375 cS269.5 378.2002 m269.5 379.0996 274.8999 378.2002 276 378 cS277.7002 377.7002 m280.6001 377.7002 lS283 377.7998 m285.7002 378.2002 286.3999 377.2998 vS287.7998 377.5 m288.2998 377.2998 294.1001 377.7002 296.6001 375.4004 cS299.2002 375.5996 m302.7002 374.7002 304.5 372.2002 vS270.7002 374.7998 m272.6001 374.7998 lS274.8999 374.7998 m280.2002 375.2002 280.6001 374.2998 vS285.1001 374.7002 m287.8999 374.0996 lS291.2998 374.2998 m297.7998 373.0996 298 372.2002 vS299 372.4004 m303.3999 371 304.7998 368.2002 vS277 371.2002 m280.6001 371.5 282 370.5996 vS283.7002 370.7998 m286.2002 371.2002 286.5 370.5996 vS288.7998 370.2998 m295 371.2002 297.5 369.4004 vS298.5 369.2002 m302.8999 367.2998 304.7002 364.5996 vS285.2998 365.9004 m287.6001 365.9004 lS289.8999 366.2002 m296 365.9004 297.5 364.0996 vS299 364.5996 m303.3999 364.5996 304.7998 359.7002 vS289 362.9004 m294.6001 363.7998 297.2998 361.0996 vS299.7002 361.0996 m304 359.5 304.5 357.7998 vS0 O0 0 0 0 k0.5 w345 443.1001 m342.5 359 l317.5 357.5996 l313.2998 358 309.4004 354.4004 vB0.3 w311.5 438.8999 m314.4004 440.1001 318.4004 440 vS320 440 m322.7998 440.1001 323.2998 439.7998 vS325.0996 439.2998 m329 439.2998 329.7002 438.2002 vS331.0996 438 m332.7998 437 334.7998 438 vS336.2002 437.8999 m338.5 437.8999 339.5 438.7002 vS341.2998 439.1001 m342.9004 438.8999 343.5996 440.2998 vSu307.2998 435.8999 m306.3999 437 310.0996 438 vS307 432.7998 m308.5 433.6001 lS310.7998 434.7002 m314.9004 436.7998 317.2998 436.1001 vS318.7998 435.7002 m321.7002 436.1001 322.0996 435.6001 vS324 434.8999 m327.4004 434.7002 328.0996 434.2998 vS330.4004 434.2002 m332.5 433.6001 334.4004 434.2998 vS335.5996 434.5 m336.5 434.2998 338.7998 434.8999 vS340.5996 434.7002 m341.5996 434 343.2002 435.3999 vS307 429.1001 m308.9004 431.7002 311 431.7002 v313.7002 431.7002 315.5996 432.2998 317 431.8999 cS319.2998 432.1001 m321.4004 432.1001 lS324.2002 431.5 m326.7998 430.6001 lS328.4004 430.6001 m332.2998 430.7998 lS334.9004 431 m338.0996 431.2998 lS340.2002 431.5 m342.5 431.8999 343 432.3999 vS307.0996 426.1001 m309.5996 428.5 311.2002 428.5 v312.7998 428.5 315.4004 428.7002 315.5996 428.2002 cS317 428.2002 m320.5 427.7002 lS322.4004 427.5 m324.7002 427.5 lS327.7002 427.1001 m330.9004 427.5 lS332.7998 427.2998 m335.5996 427.2998 336.2002 427.7002 vS338.2998 427.7002 m342.7002 428.5 343.9004 429.6001 vS306.7998 423.3999 m308.9004 425.2002 311 425.3999 v313.0996 425.5 314.2002 426 315.2002 425.5 c316.5 425 315.9004 425.2002 yS317.7002 425.2002 m320 424.7998 lS322.0996 424.7002 m324.5996 423.7998 325.0996 424.1001 vS326.7998 423.7998 m329.2998 423.6001 330.4004 424.1001 vS332.0996 424 m335.0996 424 336.4004 424.5 vS338.7998 424.7002 m342.7002 424.7998 343.2002 425.3999 vSU307.2002 419 m309.2002 421.7002 311.2998 421.7002 v314 421.7002 315.9004 422.2002 317.2998 421.7998 cS319.5 422 m321.7002 422 lS324.5 421.5 m327.0996 420.6001 lS328.7002 420.6001 m332.5996 420.7998 lS335.2002 421 m338.4004 421.2998 lS340.5 421.5 m342.7998 421.7998 343.2998 422.3999 vS307.4004 416 m309.9004 418.5 311.4004 418.5 v313 418.5 315.7002 418.7002 315.7998 418.1001 cS317.2998 418.1001 m320.7998 417.6001 lS322.7002 417.3999 m325 417.3999 lS328 417.1001 m331.2002 417.3999 lS333.0996 417.2998 m335.9004 417.2998 336.4004 417.6001 vS338.5996 417.6001 m343 418.5 344.2002 419.6001 vS307 413.3999 m309.2002 415.2002 311.2998 415.2998 v313.4004 415.5 314.5 415.8999 315.5 415.5 c316.7002 415 316.2002 415.2002 yS318 415.2002 m320.2002 414.7998 lS322.4004 414.6001 m324.7998 413.7002 325.4004 414.1001 vS327.0996 413.7002 m329.5996 413.6001 330.5996 414.1001 vS332.4004 413.8999 m335.4004 413.8999 336.5996 414.3999 vS339.0996 414.6001 m343 414.7998 343.5 415.2998 vS306.5996 410.1001 m308.2002 410.8999 lS310.5 412 m314.5 414.1001 317 413.3999 vS318.4004 413 m321.4004 413.3999 321.7002 412.8999 vS323.7002 412.2002 m327 412 327.7002 411.6001 vS330 411.5 m332.0996 410.8999 334.0996 411.6001 vS335.2998 411.7998 m336.2002 411.6001 338.5 412.2002 vS340.2002 412 m341.2998 411.2998 342.9004 412.7002 vS306.5996 406.3999 m308.5 409 310.7002 409 v313.4004 409 315.2998 409.5 316.5996 409.2002 cS318.9004 409.2998 m321 409.2998 lS323.9004 408.7998 m326.5 407.8999 lS328.0996 407.8999 m332 408.1001 lS334.5996 408.2998 m337.7998 408.6001 lS339.9004 408.7998 m342.2002 409.2002 342.7002 409.7002 vS306.7998 403.3999 m309.2002 405.7998 310.7998 405.7998 v312.4004 405.7998 315.0996 406 315.2002 405.5 cS316.5996 405.5 m320.2002 404.8999 lS322.0996 404.7998 m324.4004 404.7998 lS327.4004 404.3999 m330.5 404.7998 lS332.5 404.6001 m335.2998 404.6001 335.7998 404.8999 vS337.9004 404.8999 m342.2998 405.7998 343.5996 406.8999 vS306.3999 400.7002 m308.5 402.5 310.7002 402.7002 v312.7998 402.7998 313.9004 403.2998 314.9004 402.7998 c316.0996 402.2998 315.5996 402.5 yS317.2998 402.5 m319.5996 402.1001 lS321.7002 402 m324.2002 401.1001 324.7002 401.3999 vS326.5 401.1001 m329 400.8999 330 401.3999 vS331.7998 401.2002 m334.7998 401.2002 336 401.7998 vS338.5 402 m342.2998 402.1001 342.9004 402.7002 vS306.2998 397 m307.7998 397.8999 lS310.0996 399 m314.2002 401.1001 316.5996 400.3999 vS318 400 m321 400.3999 321.4004 399.7998 vS323.2998 399.1001 m326.7002 399 327.4004 398.6001 vS329.7002 398.3999 m331.7998 397.8999 333.7002 398.6001 vS334.9004 398.7998 m335.7998 398.6001 338.0996 399.1001 vS339.9004 399 m340.9004 398.2998 342.5 399.7002 vS306.2998 393.2998 m308.2002 396 310.2998 396 v313 396 314.9004 396.5 316.2998 396.1001 cS318.5996 396.2998 m320.7002 396.2998 lS323.5 395.7998 m326.0996 394.9004 lS327.7002 394.9004 m331.5996 395.0996 lS334.2002 395.2998 m337.4004 395.6001 lS339.5 395.7998 m341.7998 396.1001 342.2998 396.7002 vS306.3999 390.2998 m308.9004 392.7998 310.5 392.7998 v312.0996 392.7998 314.7002 393 314.9004 392.4004 cS316.2998 392.4004 m319.7998 391.9004 lS321.7002 391.7002 m324 391.7002 lS327 391.4004 m330.2002 391.7002 lS332.0996 391.5996 m334.9004 391.5996 335.5 391.9004 vS337.5996 391.9004 m342 392.7998 343.2002 393.9004 vS306.1001 387.7002 m308.2002 389.5 310.2998 389.5996 v312.4004 389.7998 313.5 390.2002 314.5 389.7998 c315.7998 389.2998 315.2002 389.5 yS317 389.5 m319.2998 389.0996 lS321.4004 388.9004 m323.9004 388 324.4004 388.4004 vS326.0996 388 m328.5996 387.9004 329.7002 388.4004 vS331.4004 388.2002 m334.4004 388.2002 335.5996 388.7998 vS338.0996 388.9004 m342 389.0996 342.5 389.5996 vS305.8999 384 m307.5 384.9004 lS309.7998 385.9004 m313.7998 388 316.2998 387.2998 vS317.7002 387 m320.7002 387.2998 321 386.7998 vS323 386.0996 m326.2998 385.9004 327 385.5996 vS329.2998 385.4004 m331.4004 384.9004 333.4004 385.5996 vS334.5996 385.7998 m335.5 385.5996 337.7998 386.0996 vS339.5 385.9004 m340.5996 385.2002 342.2002 386.5996 vS305.8999 380.2998 m307.7998 382.9004 310 382.9004 v312.7002 382.9004 314.5 383.5 315.9004 383.0996 cS318.2002 383.2998 m320.2998 383.2998 lS323.2002 382.7998 m325.7998 381.9004 lS327.4004 381.9004 m331.2002 382.0996 lS333.9004 382.2002 m337.0996 382.5996 lS339.2002 382.7998 m341.5 383.0996 342 383.5996 vS306.1001 377.2998 m308.5 379.7998 310.0996 379.7998 v311.7002 379.7998 314.4004 380 314.5 379.4004 cS315.9004 379.4004 m319.5 378.9004 lS321.4004 378.7002 m323.7002 378.7002 lS326.7002 378.4004 m329.7998 378.7002 lS331.7998 378.5 m334.5996 378.5 335.0996 378.9004 vS337.2002 378.9004 m341.5996 379.7998 342.9004 380.7998 vS305.7002 374.7002 m307.7998 376.4004 310 376.5996 v312.0996 376.7998 313.2002 377.2002 314.2002 376.7998 c315.4004 376.2998 314.9004 376.4004 yS316.5996 376.4004 m318.9004 376.0996 lS321 375.9004 m323.5 375 324 375.4004 vS325.7998 375 m328.2998 374.7998 329.2998 375.4004 vS331.0996 375.2002 m334.0996 375.2002 335.2998 375.7002 vS337.7998 375.9004 m341.5996 376.0996 342.2002 376.5996 vS305.6001 370.7998 m307.0996 371.7002 lS309.4004 372.7002 m313.5 374.7998 315.9004 374.0996 vS317.2998 373.7998 m320.2998 374.0996 320.7002 373.5996 vS322.5996 372.9004 m326 372.7002 326.7002 372.4004 vS329 372.2002 m331.0996 371.7002 333 372.4004 vS334.2002 372.5996 m335.0996 372.4004 337.4004 372.9004 vS339.2002 372.7002 m340.2002 372 341.7998 373.4004 vS305.6001 367.0996 m307.5 369.7002 309.5996 369.7002 v312.2998 369.7002 314.2002 370.2998 315.5996 369.9004 cS317.9004 370.0996 m320 370.0996 lS322.7998 369.5996 m325.4004 368.7002 lS327 368.7002 m330.9004 368.9004 lS333.5 369 m336.7002 369.4004 lS338.7998 369.5996 m341.0996 369.9004 341.5996 370.4004 vS305.7002 364.0996 m308.2002 366.5996 309.7998 366.5996 v311.4004 366.5996 314 366.7998 314.2002 366.2002 cS315.5996 366.2002 m319.0996 365.7002 lS321 365.5 m323.2998 365.5 lS326.2998 365.2002 m329.5 365.5 lS331.4004 365.2998 m334.2002 365.2998 334.7998 365.7002 vS336.9004 365.7002 m341.2998 366.5996 342.5 367.5996 vS305.3999 361.5 m307.5 363.2002 309.5996 363.4004 v311.7002 363.5996 312.7998 364 313.7998 363.5996 c315.0996 363.0996 314.5 363.2002 yS316.2998 363.2002 m318.5996 362.9004 lS320.7002 362.7002 m323.2002 361.7998 323.7002 362.2002 vS325.4004 361.7998 m327.9004 361.5996 329 362.2002 vS330.7002 362 m333.7002 362 334.9004 362.5 vS337.4004 362.7002 m341.2998 362.9004 341.7998 363.4004 vS305.5 357.9004 m306.7002 360.5996 314.2002 360.5996 vS306 355.5996 m307 357.7002 308.7002 357.7002 v310.4004 357.7002 311.7998 358 312 357.7002 cSu0.7 w299.2002 350.5996 m300.8999 348.0996 305.2998 348.0996 v309.7002 348.0996 310.7002 349.5 311.2002 350.2002 cSU0.3 w311.2002 350.2002 m318.9004 352.7002 l350.0996 351.2998 l351.7998 441.3999 lSu0 O0 0 0 0 k0.9 w299.2002 350.5996 m299.1001 351 300.5 353.5996 301 353.9004 c301.3999 354.2998 302.6001 355.5 305.2002 355.5 c307.7998 355.4004 311.2998 354.4004 311.2002 350.2002 c311.0996 349.0996 307.5996 348.2002 305.3999 348.0996 c304.1001 348.0996 299.7002 348.9004 299.2002 350.5996 cbUu1 w350.9004 394.7002 m351.9004 394.7002 354.5996 395.0996 354.9004 394.2002 c355.2998 393.2998 357 394.7002 357.9004 395.2998 c358.7998 395.7998 358.4004 399.2998 357.7002 400 c357 400.7002 358.0996 401.6001 358.4004 402.5 c358.7998 403.3999 357.2002 406.3999 356.5 407.7998 c355.7998 409.2002 357.4004 411.1001 358.0996 411.1001 c358.7998 411.1001 360.4004 409 359.7998 407.3999 c359.2998 405.7998 361.5996 404.6001 362.7998 403.2002 c364.0996 401.7998 363.2002 394.7002 363.2002 396.2998 c363.2002 397.8999 367.4004 397.6001 367.9004 398.1001 c368.5 398.6001 368.7998 400.7002 y367.0996 403 366.7002 403.8999 v366.4004 404.7998 367.4004 406.8999 367.5996 407.7998 c367.7998 408.6001 370.9004 408.6001 370.2002 408.2998 c369.5 407.8999 370.2002 403.7002 370.2002 403.2002 c370.2002 402.7002 373.2002 399.7002 372.7002 397.6001 c372.2002 395.4004 372 395.7998 366.2002 390 c360.4004 384.2002 357 384.7998 352.2998 386.5 c347.7998 388.0996 346.5996 392.7998 y345.2002 392.7002 340.5 389.7998 v338.2998 388.5 337.7002 385.5996 337.2002 383.5 C336.7998 376.7002 L335.5 378.5 334.7002 387.7002 y334.2998 389.2998 335.5996 392.2998 v336.7998 395.2998 341.2002 397.2002 342.4004 399.7002 c343.7002 402.1001 347.5 400.5 348.5996 400.5 c350.4004 400.6001 350.5 399.2998 350.5996 398.5 C350.7002 397.8999 L350.9004 394.7002 L350.9004 394.7002 L349.7998 394.7002 346.5996 394.2002 346.5996 392.7998 c346.5996 392.0996 345.5996 396.7002 345.7998 396.8999 c347.9004 399.3999 349.5 396 350.7002 398.2998 cBUu0 0 0 0.2 k0.9 w327 350.5 m319.7998 353.2998 320.2002 355.7002 v320.5996 358.0996 322.5 358.2998 322.5996 358.2998 c322.7002 358.2002 321.4004 359.4004 321.2998 359.7002 c321.2002 360 320.5 361 319.5996 361.4004 c318.7002 361.7002 316.5996 362.7002 315 361.4004 c313.4004 360 312.2002 358.5 312.0996 358.2002 C312 358 L309.5 354.2998 314.0996 352 y315.7002 350.7998 321.4004 349.5996 322.7998 349.4004 c323 349.4004 324.2002 350.2998 324.5996 350.2998 cBUu0 0 0 0 k1 w362.5996 378.2998 m363.2002 375.9004 362.9004 373.5 362.7002 372.4004 c362.4004 370.5 361.2998 364.5996 353 366.0996 c344.7998 367.5 327.2998 370.5 327.5 371.5 c327.7002 372.5996 315.9004 374.0996 315.9004 371.2002 c315.9004 368.7002 316.2998 363.5996 315.7002 361.7998 C315.7998 361.7998 L316.5996 362.2002 317.2998 362.2002 318.5 361.7998 c321.5 360.9004 320.5996 359.7002 322.7998 358.0996 c324.9004 356.5 326.5996 356.4004 327.5 356.5 c328.4004 356.7002 337 355.7998 338.0996 355 c339.0996 354.0996 348.5996 351.7998 353.4004 352.0996 c358.0996 352.5 362 354.2998 363.2002 355.5 c364.5 356.7002 369 361.2998 369.7002 363.7998 c370.5 366.2002 372.5996 371.5 366.4004 376.4004 c365.0996 377.5 363.7998 378.0996 362.5996 378.5 C362.5996 378.2998 LbUu0 0 0 0.2 k0.9 w361.7998 379 m357.9004 380.2998 355.5 378.7002 356.5 378.7002 c357.4004 378.7002 354.4004 379.5 351.4004 375 c349.0996 371.7002 343 372.5996 341.9004 372.4004 c340.7998 372.2002 336.2998 375.2002 336 378.9004 c336 379.5 335.2002 381.7998 335.2002 383.5 C334.7998 386.2002 L336.2998 384.0996 340.5996 379.7998 343.2998 380 c348.4004 380.2998 356 383.7998 359.5 382.9004 c361 382.5996 368 376.5 368.5 374.5996 c364.2002 379.4004 359.0996 379.5 vBUu0 0 0 0 k1 w256.8999 366.2998 m255.7998 366.2998 264.5 367 272.3999 358.4004 c276.7002 353.7002 274.7998 350.0996 280.7998 342 c286.7998 333.9004 292.3999 330.0996 307.9004 328.2998 c323.4004 326.5 327.0996 336.2002 328.2002 336.4004 c329.2002 336.5996 331.2998 343.7998 330.7998 345.9004 c330.2998 348 328.0996 350.7998 325.2998 350.9004 c324.5996 350.9004 323.7998 350.7002 y322.2002 349.9004 321 349.7998 V322.7998 349.2002 L323.7998 347.7002 322.5 346.7002 319.9004 344.7002 c316.2002 341.7998 311.4004 342.9004 305.7998 343.5996 c300.2002 344.2998 295.3999 347.2998 293.1001 352.2002 c290.8999 357.2002 285.7998 366.0996 277.7002 372.5 c269.6001 378.7998 268.1001 377.7998 260.7998 377.5996 c253.3999 377.4004 252.7002 374.7998 251.2998 373.5 c249.7998 372.2998 251.3999 367.7002 250.6001 366.5 c249.7002 365.2998 248.6001 364.7002 yBUu0 0 0 0.2 k0.9 w254.8999 358.0996 m254.7998 352.0996 l250.3999 351.7002 242.6001 360.5 247.2002 363.7998 c251.7998 367.2002 254.8999 366.2998 256.3999 366.2998 c257.7998 366.2998 251.2998 366.0996 251.1001 364.2002 c250.8999 362.2998 249.8999 360.7002 254.8999 358.0996 cbUu254.7998 352.0996 m266.6001 351.5 l268.1001 350 268.1001 347.2002 v268.1001 347 269.7998 347.0996 270.5 346.2002 c271.5 345.2002 273.5 341.5 275.5 341.2002 c277.3999 341 277.2002 339.0996 276.2002 338.7998 c275.2998 338.4004 273.2998 339 272.8999 339.7002 c272.6001 340.4004 271.8999 342.0996 270.1001 342.2002 c268.2002 342.2998 265.5 344 265.6001 344.7002 c265.7002 345.2998 265.7998 343.4004 264.7998 342.4004 c263.7998 341.2998 265.8999 340.2002 266.2002 339.5996 c266.6001 338.9004 268.3999 337.0996 267.8999 336.5 c267.3999 335.9004 268 334.5 267.2998 335 c266.6001 335.5 265.2002 335.9004 264.7002 337.0996 c264.2002 338.2998 263.2998 339.4004 262.1001 339.7998 c260.7998 340.2998 261.1001 341.4004 260.7998 343.2002 c260.3999 344.9004 260.2998 346.5 258.7998 346.9004 c257.2998 347.2002 256.8999 347 257 348.4004 c257.1001 349.7998 254.7998 352.0996 ybUu*u0 0 0 1 k1 w 4 M266.1143 369.4629 m265.8862 369.0273 265.7393 368.7061 265.7925 368.4893 c265.833 368.3125 265.9355 368.1699 266.6313 367.8057 c267.5967 367.2988 267.7588 367.2686 268.6289 367.9551 c268.7388 367.9531 268.8643 367.8535 268.8711 367.7617 c268.6099 367.4326 268.0718 366.8721 267.8442 366.6914 c267.4878 366.9014 266.7446 367.3018 265.7705 367.8125 c264.8657 368.2871 L264.4224 368.5205 263.9829 368.7393 263.6084 368.9141 c263.5571 368.9854 263.6221 369.1729 263.7236 369.1758 c264.0073 369.082 L264.4434 368.9189 264.5352 368.9043 265.0098 369.8096 c266.707 373.0449 L267.1816 373.9492 267.1167 374.0166 266.7402 374.291 c266.5146 374.4541 L266.4766 374.5293 266.5679 374.7031 266.6646 374.6953 c267.0903 374.4502 267.4771 374.2363 267.877 374.0264 c268.2598 373.8262 268.6558 373.6289 269.0479 373.4473 c269.1074 373.3721 269.0249 373.1934 268.9326 373.1855 c268.7231 373.252 L268.2822 373.4043 268.1904 373.4199 267.7158 372.5156 C266.1143 369.4629 lf*UUu*u273.2192 369.4951 m273.9409 370.248 273.897 370.3311 273.6108 370.7012 c273.5107 370.8242 L273.5083 370.9219 273.6382 371.043 273.7222 371.0166 c273.9785 370.7441 274.3062 370.417 274.6191 370.1172 c275.9771 368.8174 L276.4321 368.3818 276.8516 367.9941 276.9575 367.9199 c276.8701 367.7725 276.375 367.1689 276.125 366.8232 c276.0425 366.793 275.8867 366.915 275.8706 367.0117 c276.1514 367.5332 276.2148 367.8135 276.042 368.0879 c275.9258 368.2939 275.7261 368.5127 275.5342 368.6963 c275.0576 369.1523 L274.752 369.4443 274.7383 369.4307 274.3506 369.0254 c273.2002 367.8232 L273.0234 367.6387 273.0239 367.625 273.1875 367.4688 c273.5288 367.1416 L274.147 366.5498 274.2749 366.4404 274.6172 366.6992 c274.8984 366.8936 L275.0029 366.8887 275.1382 366.7598 275.1191 366.668 c274.9282 366.4824 274.6689 366.2402 274.4175 365.9775 c274.1587 365.707 273.9346 365.4443 273.7241 365.2109 c273.6411 365.1953 273.5059 365.3242 273.4897 365.4219 c273.7124 365.7529 L273.9482 366.0996 273.8408 366.2295 273.2227 366.8223 c272.8809 367.1484 L272.7173 367.3057 272.6968 367.2979 272.5269 367.1191 c271.6626 366.2168 L271.3154 365.8535 271.0845 365.585 271.0757 365.3613 c271.0654 365.1807 271.1318 365.0078 271.7295 364.4355 c272.6187 363.5576 272.9727 363.6143 273.7725 363.9521 c273.8843 363.9404 273.9849 363.8027 273.9595 363.6914 c273.6309 363.4336 272.957 363.043 272.6738 362.9463 c272.3745 363.2598 271.77 363.8525 270.938 364.6484 c270.1274 365.4238 L269.8145 365.7236 269.374 366.1318 269.0405 366.4238 c269.0107 366.5068 269.126 366.6416 269.2236 366.6436 c269.5137 366.4199 L269.8818 366.1357 269.9663 366.0957 270.688 366.8496 C273.2192 369.4951 lf*UUu*u279.3979 363.7598 m279.7305 364.0039 279.7407 364.0234 279.5894 364.2285 c279.2637 364.6729 L278.729 365.4014 278.4849 365.5518 277.6284 365.373 c277.54 365.3936 277.4419 365.5771 277.4976 365.668 c278.0244 365.8467 278.6025 366.0889 278.9204 366.2363 c278.9556 366.2383 278.9868 366.2119 279.0161 366.1729 c279.0391 366.1406 279.0547 366.1035 279.0425 366.0693 c278.8735 365.8848 278.9468 365.7686 279.3423 365.2305 c281.7144 361.999 L281.999 361.6104 282.1099 361.5098 282.3618 361.5479 c282.4009 361.5273 282.4399 361.5078 282.4634 361.4766 c282.498 361.4287 282.5117 361.377 282.4995 361.3438 c282.1167 361.1855 281.3892 360.748 281.1528 360.5391 c281.0605 360.5313 280.9458 360.6543 280.9492 360.7666 c281.4912 361.3232 281.5313 361.584 280.9092 362.4316 c280.5776 362.8828 L280.4268 363.0889 280.4048 363.085 280.0723 362.8408 c276.6509 360.3301 L275.8115 359.7129 275.8403 359.625 276.0737 359.2227 c276.2515 358.915 L276.2368 358.8184 276.0884 358.7227 276.0103 358.7568 c275.689 359.2285 275.4351 359.5908 275.1792 359.9395 c274.9238 360.2891 274.6426 360.6563 274.2544 361.1543 c274.2397 361.2402 274.3921 361.3643 274.4727 361.3379 c274.7563 361.0352 L275.061 360.6855 275.1372 360.6318 275.9766 361.248 C279.3979 363.7598 lf*UUu*u284.9331 354.2568 m285.3125 354.4189 285.3267 354.4365 285.2261 354.6719 c285.0088 355.1768 L284.6523 356.0078 284.4482 356.21 283.5732 356.2295 c283.4922 356.2695 283.4375 356.4707 283.5127 356.5459 c284.0664 356.6016 284.6846 356.7061 285.0278 356.7793 c285.0625 356.7725 285.0869 356.7402 285.1064 356.6943 c285.1221 356.6582 285.1284 356.6191 285.1089 356.5889 c284.9023 356.4473 284.9478 356.3164 285.2114 355.7021 c286.7925 352.0176 L286.9824 351.5742 287.0679 351.4502 287.3223 351.4316 c287.3555 351.4023 287.3892 351.375 287.4048 351.3389 c287.4282 351.2842 287.4292 351.2314 287.4102 351.2012 c287.001 351.1328 286.1929 350.8721 285.9155 350.7207 c285.8237 350.7354 285.7397 350.8809 285.7686 350.9893 c286.4224 351.4082 286.5205 351.6543 286.106 352.6211 c285.8848 353.1357 L285.7842 353.3711 285.7622 353.3721 285.3828 353.209 c281.4805 351.5352 L280.5229 351.123 280.5308 351.0313 280.6675 350.5869 c280.771 350.2461 L280.7349 350.1563 280.5684 350.0957 280.5015 350.1523 c280.2944 350.6836 280.1294 351.0938 279.9585 351.4922 c279.7881 351.8887 279.5972 352.3096 279.3311 352.8799 c279.3359 352.9678 279.5127 353.0547 279.585 353.0107 c279.793 352.6504 L280.0112 352.2412 280.0732 352.1719 281.0308 352.582 C284.9331 354.2568 lf*UUu*u285.8452 347.002 m285.5283 347.3906 285.4941 347.4014 285.2886 347.2344 c284.1694 346.3203 L283.3623 345.6621 283.3955 345.5752 283.6494 345.1865 c283.8052 344.9336 L283.7954 344.8359 283.6523 344.7324 283.5718 344.7686 c283.2642 345.1768 282.9922 345.5254 282.7192 345.8604 c282.4458 346.1953 282.1587 346.5322 281.9077 346.8086 c281.8882 346.8945 282.019 347.0146 282.1162 347.0039 c282.2183 346.9102 L282.5635 346.5957 282.6421 346.5459 283.4492 347.2041 c286.2817 349.5146 L287.0889 350.1729 287.0557 350.2598 286.8096 350.6543 c286.6958 350.8408 L286.6904 350.9258 286.8486 351.042 286.9287 351.0059 c287.187 350.6582 287.4712 350.2939 287.7441 349.96 c288.0176 349.625 288.3047 349.2881 288.562 349.0029 c288.5815 348.918 288.4355 348.7852 288.354 348.8086 c288.2256 348.9189 L287.8877 349.2393 287.8091 349.2891 287.002 348.6309 c286.0806 347.8789 L285.8677 347.7061 285.8711 347.6699 286.1875 347.2822 c287.6406 345.5 L287.9575 345.1123 287.9912 345.1016 288.2046 345.2754 c289.126 346.0273 L289.9331 346.6855 289.8999 346.7725 289.6538 347.168 c289.54 347.3535 L289.5347 347.4375 289.6934 347.5547 289.7734 347.5186 c290.0439 347.1563 290.3154 346.8076 290.5889 346.4727 c290.8618 346.1367 291.1489 345.8008 291.4126 345.5078 c291.4321 345.4229 291.2861 345.291 291.2046 345.3125 c291.0698 345.4316 L290.7324 345.752 290.6533 345.8018 289.8462 345.1436 c287.0137 342.834 L286.207 342.1758 286.2397 342.0879 286.4858 341.6934 c286.5996 341.5068 L286.5898 341.4102 286.4468 341.3057 286.3667 341.3418 c286.1084 341.6895 285.8369 342.0391 285.5635 342.373 c285.2778 342.7236 284.9907 343.0605 284.7021 343.3818 c284.6831 343.4688 284.814 343.5879 284.9106 343.5771 c285.0703 343.4287 L285.4077 343.1084 285.4863 343.0586 286.2935 343.7168 c287.4126 344.6289 L287.6182 344.7979 287.6147 344.832 287.2983 345.2207 C285.8452 347.002 lf*UUu*u291.7603 343.0098 m292.3022 343.8975 292.2422 343.9688 291.8843 344.2686 c291.7603 344.3672 L291.7373 344.4609 291.8379 344.6064 291.9253 344.5986 c292.2334 344.3887 292.6221 344.1396 292.9907 343.915 c294.5908 342.9385 L295.127 342.6113 295.6177 342.3232 295.7368 342.2734 c295.6836 342.1104 295.3301 341.418 295.1602 341.0273 c295.0859 340.9805 294.9082 341.0654 294.8721 341.1572 c295.0342 341.7246 295.0366 342.0107 294.8091 342.2422 c294.6523 342.418 294.4111 342.5879 294.1851 342.7266 c293.624 343.0684 L293.2637 343.2881 293.2534 343.2715 292.9619 342.7939 c292.0981 341.3779 L291.9653 341.1602 291.9688 341.1475 292.1611 341.0293 c292.5635 340.7842 L293.292 340.3398 293.4395 340.2607 293.7183 340.585 c293.9507 340.835 L294.0532 340.8525 294.2124 340.7549 294.2134 340.665 c294.0669 340.4434 293.8662 340.1523 293.6772 339.8418 c293.4829 339.5234 293.3208 339.2197 293.1655 338.9443 c293.0879 338.9121 292.9287 339.0098 292.8926 339.0996 c293.0381 339.4707 L293.1943 339.8594 293.062 339.9629 292.3335 340.4072 c291.9312 340.6523 L291.7383 340.7695 291.7197 340.7578 291.5923 340.5488 c290.9429 339.4854 L290.6821 339.0576 290.5151 338.7461 290.5537 338.5273 c290.5825 338.3477 290.6841 338.1943 291.3877 337.7646 c292.4414 337.0986 292.7739 337.2295 293.4814 337.7285 c293.5923 337.7422 293.7197 337.6299 293.7188 337.5146 c293.4536 337.1943 292.8809 336.6699 292.6255 336.5156 c292.2671 336.7568 291.5518 337.2051 290.5718 337.8027 c289.6167 338.3857 L289.248 338.6104 288.7324 338.9141 288.3452 339.127 c288.2983 339.2021 288.3823 339.3574 288.4766 339.3809 c288.8066 339.2246 L289.2261 339.0264 289.3169 339.0059 289.8589 339.8936 C291.7603 343.0098 lf*UUu*u297.1509 339.5459 m297.4482 340.4404 297.4761 340.5557 297.0537 340.748 c296.8203 340.8564 L296.7769 340.9434 296.8267 341.0928 296.9165 341.1143 c297.5225 340.9746 298.3242 340.7393 299.0889 340.4854 c299.8159 340.2441 300.4189 339.9404 300.7549 339.5811 c301.1465 339.1709 301.3462 338.6182 301.123 337.9473 c300.8379 337.0889 300.0337 336.8799 299.5146 336.8457 c299.4497 336.8359 299.4434 336.7549 299.4624 336.6875 c299.79 335.1807 299.9927 334.2324 300.3101 333.7236 c300.4966 333.4141 300.7485 333.2676 300.8574 333.2207 c300.8916 333.1689 300.8574 333.0654 300.814 333.0283 c300.6929 333.0371 300.5063 333.0684 300.1802 333.1768 c299.2852 333.4736 298.9209 333.999 298.6406 335.0557 c298.519 335.5303 298.4282 336.1299 298.3252 336.5674 c298.2505 336.9033 298.1602 336.9746 297.8525 337.0771 c297.5728 337.1689 297.5605 337.1641 297.4956 336.9678 c297.0991 335.7744 L296.7705 334.7861 296.8452 334.7305 297.2646 334.5293 c297.4604 334.4326 L297.5039 334.3457 297.439 334.1807 297.3521 334.1689 c296.9482 334.3232 296.5317 334.4727 296.1216 334.6084 c295.7114 334.7441 295.2886 334.875 294.8535 334.998 c294.7915 335.0605 294.8193 335.2383 294.9248 335.2754 c295.1392 335.2354 L295.5957 335.1445 295.689 335.1455 296.0176 336.1328 C297.1509 339.5459 lf1 D297.7866 337.8438 m297.6875 337.5449 297.6812 337.5273 298.1289 337.3779 c299.0425 337.0742 299.6104 337.3828 299.9048 338.2686 c300.1494 339.0049 299.8877 339.8066 299.0767 340.0762 c298.5918 340.2363 298.5732 340.2119 298.4307 339.7832 C297.7866 337.8438 lf*UUu*u0 D302.9395 337.5508 m303.0317 338.5879 302.9463 338.625 302.4927 338.7344 c302.3379 338.7676 L302.2759 338.8418 302.3013 339.0176 302.3828 339.0498 c302.7529 338.9971 303.2119 338.9463 303.6421 338.9082 c305.5103 338.7422 L306.1362 338.6865 306.7041 338.6455 306.833 338.6543 c306.8574 338.4844 306.8477 337.7061 306.8691 337.2803 c306.8232 337.2061 306.625 337.2031 306.5518 337.2686 c306.4463 337.8506 306.3213 338.1074 306.0151 338.2139 c305.7964 338.3027 305.5049 338.3477 305.2407 338.3721 c304.5854 338.4307 L304.1646 338.4668 304.1631 338.4482 304.1133 337.8896 c303.9663 336.2373 L303.9438 335.9824 303.9526 335.9727 304.1777 335.9521 c304.647 335.9102 L305.498 335.835 305.6655 335.8301 305.771 336.2441 c305.8691 336.5703 L305.9536 336.6318 306.1392 336.6152 306.1812 336.5332 c306.1479 336.2705 306.0972 335.9199 306.0649 335.5586 c306.0317 335.1865 306.021 334.8418 306.0029 334.5283 c305.9482 334.4639 305.7622 334.4805 305.689 334.5469 c305.6553 334.9434 L305.6235 335.3604 305.459 335.3945 304.6079 335.4707 c304.1387 335.5117 L303.9136 335.5322 303.9023 335.5137 303.8804 335.2686 c303.77 334.0273 L303.7256 333.5273 303.7139 333.1738 303.8457 332.9941 c303.9507 332.8477 304.1104 332.7539 304.9316 332.6816 c306.1724 332.5518 306.4126 332.8154 306.8252 333.5771 c306.9189 333.6387 307.083 333.5938 307.1328 333.4912 c307.0381 333.085 306.7568 332.3613 306.5957 332.1094 c306.1675 332.168 305.3271 332.252 304.1831 332.3535 c303.0679 332.4521 L302.6377 332.4912 302.04 332.5342 301.5981 332.5537 c301.5234 332.5996 301.5293 332.7773 301.604 332.8398 c301.9692 332.8457 L302.4331 332.8545 302.5239 332.876 302.6162 333.9121 C302.9395 337.5508 lf*UUu*u313.3721 337.1357 m313.1719 338.0566 313.1367 338.1699 312.6758 338.1191 c312.4189 338.0938 L312.3379 338.1465 312.3047 338.2998 312.3711 338.3643 c312.7939 338.4971 313.4844 338.6982 314.54 338.9277 c315.3457 339.1035 316.0059 339.166 316.4922 339.0107 c316.9902 338.8477 317.3047 338.5146 317.4355 337.9102 c317.5596 337.3438 317.2402 336.8223 316.6172 336.4551 c316.5811 336.4365 316.5674 336.4043 316.5723 336.3848 c316.5762 336.3652 316.5986 336.3496 316.6611 336.3438 c317.415 336.3867 318.334 336.0947 318.5693 335.0107 c318.666 334.5684 318.627 334.0576 318.2627 333.6064 c317.8936 333.1338 317.2949 332.832 316.2012 332.5938 c315.7793 332.502 315.3691 332.4434 315.0039 332.3643 c314.582 332.2715 314.1328 332.1641 313.7148 332.0527 c313.6299 332.0742 313.582 332.2451 313.6357 332.3271 c313.8398 332.4014 L314.2793 332.5576 314.3594 332.6055 314.1367 333.623 C313.3721 337.1357 lf1 D315.2061 334.0664 m315.3975 333.1934 315.5703 332.8594 316.4053 333.04 c317.0674 333.1855 317.5586 333.7441 317.373 334.5986 c317.1582 335.5879 316.3574 336.0264 315.293 335.7939 c314.8711 335.7021 314.8643 335.6406 314.9063 335.4482 C315.2061 334.0664 lf314.7148 336.3223 m314.7695 336.0723 314.8008 336.0693 315.1846 336.1523 c316.0869 336.3486 316.4219 336.7939 316.2344 337.6582 c316.0498 338.502 315.3525 338.7021 314.7578 338.5732 c314.2773 338.4688 314.2529 338.4434 314.3369 338.0596 C314.7148 336.3223 lf*UUu*u0 D319.0283 338.6494 m318.4668 339.5264 318.377 339.5029 317.9512 339.3125 c317.8086 339.2441 L317.7129 339.2646 317.626 339.4189 317.6709 339.4941 c317.9961 339.6797 318.3896 339.9189 318.7539 340.1523 c320.334 341.1641 L320.8633 341.5029 321.3369 341.8184 321.4346 341.9033 c321.5566 341.7842 322.0254 341.1621 322.3018 340.8389 c322.3115 340.752 322.1563 340.6289 322.0586 340.6357 c321.6191 341.0313 321.3633 341.1582 321.0557 341.0557 c320.8281 340.9912 320.5693 340.8486 320.3467 340.7061 c319.793 340.3516 L319.4375 340.123 319.4473 340.1064 319.75 339.6357 c320.6436 338.2383 L320.7813 338.0225 320.7949 338.0195 320.9854 338.1416 c321.3828 338.3965 L322.1025 338.8564 322.2373 338.9551 322.0674 339.3477 c321.9453 339.665 L321.9746 339.7656 322.1318 339.8672 322.2148 339.8281 c322.3496 339.5986 322.5244 339.291 322.7207 338.9854 c322.9219 338.6699 323.123 338.3916 323.3008 338.1309 c323.2969 338.0469 323.1396 337.9463 323.041 337.9531 c322.7725 338.248 L322.4922 338.5576 322.3398 338.4844 321.6211 338.0234 c321.2236 337.7695 L321.0332 337.6475 321.0361 337.626 321.1689 337.4189 c321.8408 336.3691 L322.1104 335.9473 322.3184 335.6602 322.5322 335.5986 c322.7061 335.5469 322.8887 335.5703 323.583 336.0146 c324.6436 336.6709 324.6729 337.0273 324.5332 337.8818 c324.5703 337.9883 324.7266 338.0527 324.8301 338.002 c325.002 337.623 325.2227 336.8779 325.25 336.5811 c324.875 336.3643 324.1582 335.918 323.1904 335.2979 c322.248 334.6943 L321.8848 334.4609 321.3857 334.1299 321.0234 333.875 c320.9365 333.8652 320.832 334.0098 320.8535 334.1045 c321.1387 334.334 L321.5 334.623 321.5596 334.6953 320.998 335.5732 C319.0283 338.6494 lf*UUu*u329.3457 362.0557 m329.2725 361.5693 329.2393 361.2168 329.3604 361.0293 c329.4561 360.875 329.5996 360.7744 330.377 360.6572 c331.4561 360.4941 331.6191 360.5195 332.2168 361.4531 c332.3223 361.4873 332.4727 361.4346 332.5098 361.3496 c332.3711 360.9531 332.0449 360.2471 331.8896 360.002 c331.4844 360.082 330.6494 360.2188 329.5605 360.3818 c328.5498 360.5352 L328.0547 360.6094 327.5664 360.6729 327.1563 360.7148 c327.084 360.7656 327.084 360.9648 327.1787 361 c327.4775 361.0039 L327.9434 360.9941 328.0352 361.0107 328.1875 362.0215 c328.7324 365.6367 L328.8848 366.6475 328.8018 366.6895 328.3555 366.8271 c328.0889 366.9063 L328.0283 366.9658 328.0576 367.1602 328.1514 367.1904 c328.6338 367.0977 329.0693 367.0225 329.5176 366.9551 c329.9443 366.8896 330.3828 366.834 330.8145 366.7842 c330.8955 366.7324 330.876 366.5361 330.791 366.5 c330.5713 366.4932 L330.1035 366.4941 330.0117 366.4775 329.8604 365.4668 C329.3457 362.0557 lf*UUu*u335.3477 360.667 m335.1406 359.6465 335.2217 359.5996 335.6621 359.4512 c335.8682 359.3779 L335.9219 359.2979 335.877 359.126 335.793 359.1035 c335.373 359.209 334.9414 359.3066 334.5176 359.3926 c334.0938 359.4775 333.6396 359.5605 333.2119 359.627 c333.1426 359.6807 333.1689 359.8564 333.25 359.9102 c333.4668 359.8965 L333.9316 359.8613 334.0234 359.873 334.2314 360.8936 c334.957 364.4756 L335.165 365.4961 335.084 365.543 334.6436 365.6914 c334.4375 365.7637 L334.3828 365.8447 334.4277 366.0156 334.5127 366.0391 c334.9326 365.9336 335.3643 365.8359 335.8066 365.7461 c336.2305 365.6602 336.665 365.582 337.0938 365.5156 c337.1621 365.4609 337.1367 365.2861 337.0557 365.2324 c336.8379 365.2471 L336.374 365.2813 336.2813 365.2695 336.0742 364.249 C335.3477 360.667 lf*UUu*u342.0059 358.3662 m341.9619 358.0264 341.9668 357.7656 342.1016 357.6475 c342.1191 357.6045 342.1094 357.5273 342.0742 357.5039 c341.9902 357.5225 341.8486 357.5225 341.6973 357.5039 c341.2061 357.4688 340.6152 357.4639 340.1807 357.5557 c339.2627 357.75 338.4395 358.2432 337.9648 359.1221 c337.5908 359.8096 337.4756 360.6709 337.582 361.4863 c337.6885 362.3018 338.0186 363.0889 338.583 363.6182 c339.2207 364.2314 340.1084 364.4727 341.1709 364.2471 c341.5303 364.1719 341.9102 364.0107 342.1689 363.8867 c342.3389 363.8008 342.5547 363.7148 342.6465 363.6953 c342.6162 363.4023 342.6055 362.8965 342.5449 362.1318 c342.4941 362.043 342.3242 362.0684 342.2979 362.1641 c342.252 363.1406 341.7695 363.7217 341.0137 363.8818 c339.668 364.166 338.8574 363.0713 338.6426 361.4219 c338.54 360.6445 338.5693 359.7813 338.9014 359.0732 c339.2324 358.3643 339.8184 358.0313 340.2686 357.9355 c340.6357 357.8584 340.8682 357.8896 340.9785 358.0146 c341.0352 358.0928 341.0811 358.2627 341.127 358.6123 c341.1729 358.9609 L341.2627 359.6504 341.2617 359.71 340.7646 359.9258 c340.4971 360.042 L340.4521 360.1211 340.4736 360.2861 340.541 360.3242 c340.8359 360.2422 341.2021 360.1543 341.7295 360.043 c342.0732 359.9697 342.335 359.9238 342.666 359.8721 c342.7363 359.8076 342.7227 359.6406 342.6445 359.5879 c342.5029 359.5879 L342.2139 359.5986 342.1563 359.5215 342.0801 358.9297 C342.0059 358.3662 lf*UUu*u346.5605 359.6064 m346.1396 359.625 346.1143 359.6064 346.1055 359.3418 c346.0566 357.8975 L346.0205 356.8555 346.0938 356.8223 346.4805 356.7559 c346.7266 356.7051 L346.7822 356.6328 346.7676 356.4561 346.7002 356.4199 c346.2725 356.46 345.9004 356.4863 345.5371 356.5039 c345.1738 356.5205 344.8018 356.5273 344.4883 356.5225 c344.4229 356.5645 344.4209 356.7422 344.4814 356.8086 c344.5977 356.8232 L344.9883 356.873 345.0625 356.8994 345.0986 357.9414 c345.2236 361.5967 L345.2598 362.6387 345.1855 362.6719 344.7998 362.748 c344.6191 362.7861 L344.5625 362.8379 344.5781 363.0342 344.6455 363.0703 c345.0078 363.0342 345.3955 363.0059 345.7588 362.9893 c346.1221 362.9727 346.4941 362.9648 346.8164 362.9697 c346.8809 362.9277 346.8828 362.7305 346.8232 362.6846 c346.6816 362.6611 L346.292 362.6201 346.2168 362.5938 346.1816 361.5527 c346.1406 360.3633 L346.1309 360.0889 346.1553 360.0674 346.5762 360.0479 c348.5078 359.959 L348.9287 359.9395 348.9541 359.958 348.9639 360.2324 c349.0039 361.4219 L349.04 362.4639 348.9668 362.4971 348.5811 362.5732 c348.4004 362.6113 L348.3438 362.6631 348.3594 362.8594 348.4268 362.8955 c348.8057 362.8584 349.1768 362.8311 349.54 362.8145 c349.9023 362.7979 350.2754 362.79 350.6055 362.7949 c350.6699 362.752 350.6719 362.5557 350.6123 362.5098 c350.4629 362.4863 L350.0732 362.4453 349.998 362.4189 349.9619 361.3779 c349.8369 357.7227 L349.8018 356.6807 349.875 356.6475 350.2607 356.5703 c350.4414 356.5332 L350.4971 356.4609 350.4824 356.2852 350.415 356.249 c350.0527 356.2852 349.6816 356.3125 349.3184 356.3291 c348.9385 356.3467 348.5664 356.3535 348.2021 356.3516 c348.1387 356.3936 348.1357 356.5703 348.1953 356.6367 c348.3779 356.6582 L348.7686 356.6982 348.8438 356.7246 348.8789 357.7666 c348.9287 359.2109 L348.9375 359.4766 348.9141 359.4971 348.4932 359.5166 C346.5605 359.6064 lf*UUu*u354.8535 361.6943 m354.8672 362.1064 354.8594 362.127 354.6387 362.127 c354.1641 362.127 L353.3828 362.127 353.1504 362.0186 352.8125 361.2236 c352.75 361.165 352.5732 361.1943 352.543 361.293 c352.7031 361.8223 352.8496 362.4307 352.9189 362.7744 c352.9375 362.8037 352.9717 362.8135 353.0146 362.8135 c353.0479 362.8135 353.0811 362.8037 353.0977 362.7744 c353.1318 362.5293 353.251 362.5186 353.8271 362.5186 c357.2891 362.5186 L357.7051 362.5186 357.833 362.5479 357.9414 362.7744 c357.9766 362.7939 358.0107 362.8135 358.0449 362.8135 c358.0957 362.8135 358.1377 362.7939 358.1543 362.7646 c358.0566 362.3623 357.9629 361.5186 357.9775 361.2051 c357.9336 361.126 357.7881 361.1064 357.7139 361.1748 c357.627 361.9404 357.4727 362.127 356.5645 362.127 c356.0811 362.127 L355.8604 362.127 355.8516 362.1064 355.8389 361.6943 c355.7061 357.4561 L355.6738 356.416 355.75 356.3867 356.1475 356.3379 c356.4512 356.2988 L356.5078 356.2305 356.4941 356.0527 356.4258 356.0146 c355.9336 356.0332 355.5518 356.0439 355.1787 356.0439 c354.8057 356.0439 354.4063 356.0332 353.8633 356.0146 c353.7969 356.0527 353.7939 356.25 353.8555 356.2988 c354.2129 356.3477 L354.6133 356.3867 354.6895 356.416 354.7227 357.4561 C354.8535 361.6943 lf*UU*u276.5132 431.5874 m276.3018 431.5874 276.3096 431.5874 276.2368 431.3213 c275.9033 430.1382 L275.7407 429.5566 275.7729 429.5273 276.0742 429.478 c276.3096 429.4287 L276.3667 429.3594 276.3584 429.1821 276.2935 429.1426 c276.0332 429.1626 275.7646 429.1626 275.4316 429.1724 c275.1631 429.1724 274.9111 429.1626 274.6265 429.1426 c274.5693 429.1919 274.561 429.3398 274.6182 429.4287 c274.8623 429.478 L275.0981 429.5171 275.1875 429.606 275.3096 429.9312 c275.4072 430.1875 275.5371 430.6016 275.708 431.1338 c276.8223 434.6431 L276.9277 434.9585 277.001 435.1953 276.9766 435.3628 c277.2612 435.4316 277.5298 435.8359 277.5459 435.8359 c277.6113 435.8359 277.6519 435.8062 277.6841 435.7568 c277.8145 435.3135 277.9199 434.8501 278.0503 434.4063 c279.2212 430.2764 L279.4087 429.6157 279.4492 429.5469 279.8638 429.458 c279.9858 429.4287 L280.0508 429.3594 280.0508 429.1919 279.9941 429.1426 c279.6606 429.1626 279.3599 429.1724 278.937 429.1724 c278.5869 429.1724 278.229 429.1523 277.9443 429.1426 c277.8794 429.1919 277.8711 429.3696 277.9199 429.4287 c278.0991 429.458 L278.3921 429.4976 278.4165 429.5566 278.3105 429.9805 c277.9282 431.3213 L277.8472 431.5874 277.8228 431.5874 277.5947 431.5874 C276.5132 431.5874 lf1 D277.4893 432.0308 m277.7168 432.0308 277.7495 432.0508 277.6841 432.2871 c277.3428 433.4702 L277.2046 433.9927 277.1558 434.1797 277.1152 434.249 c277.0986 434.249 L277.0664 434.1797 277.001 433.9331 276.8545 433.4702 c276.5132 432.3169 L276.4238 432.0308 276.4482 432.0308 276.6436 432.0308 C277.4893 432.0308 lf*Uuu0 D0.9 w 10 M293.3999 466.2002 m309.2002 462 l304.2998 467.2002 l293.3999 466.2002 lfUu800 Ar0 0 0 0 k0 R0 0 0 1 K0.4 w293.3999 466.2002 m300.7998 458.3999 l299.3999 448.6001 l309.2002 462 l293.3999 466.2002 lbUu318.4004 447.5 m309.2002 462 l308.5 453.2002 l318.4004 447.5 lbU324 465.5 m314.5 466.8999 l308.9004 476.1001 l309.2002 462 l317 458.7998 l324 465.5 lbu0 0 0 1 k308.9004 476.1001 m309.2002 461.7002 l314.5 466.8999 l308.9004 476.1001 lbUUu0 0 0 0.2 k0.9 w350.7002 398.2998 m350 397.1001 349.2998 397.2998 v348.7002 397.6001 347 398.6001 345.7998 396.8999 c345.5996 396.7998 346.5 392.9004 346.5996 392.7998 c346.7998 392.7002 346.4004 393.5996 347.7998 394 c349.2002 394.5 348.4004 394.5 350.9004 394.7002 c350.7002 398.2998 lbUu0 0 0 1 k231.2998 356.2002 m232.2002 356.7002 232.5 357.7998 232.1001 358.7002 c231.6001 359.5996 230.3999 360 229.5 359.5 c228.6001 359 228.2998 357.9004 228.7998 357 c229.2002 356.0996 230.3999 355.7002 231.2998 356.2002 cfUu383.4004 356.7002 m384.4004 357.0996 384.7998 358.2002 384.4004 359.2002 c384 360.0996 382.9004 360.5 382 360.0996 c381 359.7002 380.5996 358.5996 381 357.7002 c381.4004 356.7002 382.5 356.2998 383.4004 356.7002 cfUu*u300 Ar1 w 4 M300.8613 480.7856 m301.2158 477.918 298.4912 475.4097 294.4658 474.9131 c289.9619 474.3579 287.085 476.353 286.7646 478.9443 c286.3975 481.9141 289.0747 484.4756 293.2598 484.9917 c297.8633 485.5591 300.5332 483.4351 300.8613 480.7856 cf1 D289.4229 479.7007 m289.6714 477.6919 291.1855 475.1001 294.5933 475.52 c296.8647 475.8003 298.5454 477.2637 298.1831 480.1895 c297.9116 482.3877 296.2412 484.7681 293.0728 484.3774 c291.0801 484.1318 289.0391 482.8013 289.4229 479.7007 cf*UUu*u0 D310.5225 485.6494 m311.8086 485.6602 312.9316 485.6841 313.3535 485.7173 c313.3564 485.394 313.3672 484.2935 313.4141 483.6035 c313.335 483.4854 312.9727 483.4531 312.7715 483.5396 c312.5625 484.3896 312.2383 484.8125 311.4727 484.9526 c310.9307 485.0508 310.4277 485.0615 309.7852 485.0562 c308.7607 485.0474 L307.918 485.0405 307.918 485.0112 307.9258 484.189 c307.9502 481.5615 L307.9531 481.1948 307.9736 481.1655 308.4355 481.1694 c309.6211 481.1792 L311.3682 481.1938 311.6885 481.2256 311.8643 481.8438 c312.0195 482.3442 L312.1396 482.4482 312.5205 482.4512 312.6221 482.335 c312.6055 481.9531 312.5703 481.4097 312.5762 480.8667 c312.5811 480.3232 312.626 479.7954 312.6504 479.3398 c312.5508 479.2217 312.1689 479.2188 312.0479 479.3203 c311.8818 479.8916 L311.6953 480.5068 311.374 480.5332 309.627 480.5186 c308.4414 480.5088 L307.9805 480.5049 307.96 480.4751 307.9639 480.1084 c307.9834 478.0532 L307.998 476.4971 308.1787 476.4546 309.123 476.4038 c309.9668 476.3374 L310.1094 476.2363 310.0918 475.9717 309.9316 475.9116 c308.6455 475.9302 307.7422 475.9375 306.8584 475.9302 c305.9746 475.9229 305.0713 475.9004 304.1479 475.8633 c303.9868 475.9209 303.9639 476.1846 304.1035 476.2886 c304.5449 476.3364 L305.4878 476.4321 305.6685 476.478 305.6538 478.0337 c305.6025 483.4941 L305.5884 485.0503 305.4072 485.0928 304.4624 485.188 c304.2012 485.2148 L304.0596 485.3164 304.0771 485.5811 304.2373 485.6411 c304.9404 485.6177 305.8438 485.6104 306.7275 485.6177 C310.5225 485.6494 lf*UUu*u339.9805 476.2383 m339.8076 476.1758 339.4629 476.2852 339.3652 476.4292 c339.3594 477.4146 338.9229 478.8672 336.4297 479.7695 c334.0303 480.6377 331.1631 480.271 330.1396 477.4434 c329.0771 474.5054 331.0703 472.1616 333.5078 471.2798 c335.8887 470.4185 337.3457 471.2012 338.1992 471.9063 c338.4141 471.9688 338.6973 471.8042 338.7461 471.646 c338.2793 470.7695 337.4404 470.0439 337.0811 469.8774 c336.8438 469.9316 336.5977 469.9585 336.375 469.9927 c335.9238 470.0464 334.5361 470.2837 333.3086 470.728 c331.4375 471.4048 329.9316 472.2617 328.8066 473.4023 c327.541 474.687 326.8428 476.3589 327.4961 478.166 c328.0801 479.7798 329.5166 480.6797 331.1982 480.96 c332.876 481.2266 334.9287 480.9365 336.8359 480.2461 c337.9141 479.8564 339.167 479.2466 339.9951 478.7598 c340.2061 478.6367 340.334 478.5747 340.4941 478.4858 c340.417 478.1548 340.1602 477.3271 339.9805 476.2383 cf*UUu*u344.4922 469.418 m344.0352 469.6719 344.0527 469.6621 343.7021 469.4038 c342.127 468.2661 L341.3555 467.7051 341.4043 467.6279 342.0186 467.2021 c342.4932 466.855 L342.5654 466.6968 342.4199 466.4761 342.25 466.5029 c341.7031 466.8408 341.123 467.1631 340.4102 467.5762 c339.8311 467.8984 339.2793 468.1885 338.6504 468.5049 c338.5625 468.6372 338.6523 468.8394 338.8398 468.8862 c339.4023 468.6572 L339.9395 468.4253 340.1973 468.4331 340.6953 468.71 c341.0918 468.9258 341.6719 469.3081 342.4258 469.7949 c347.3691 473.02 L347.8242 473.3032 348.1543 473.5229 348.2227 473.77 c348.8867 473.5181 349.7588 473.7212 349.7939 473.7021 c349.9346 473.6235 350.001 473.5366 350.0352 473.4331 c349.9961 472.7002 349.8896 471.9707 349.8496 471.2378 c349.3926 464.4609 L349.3193 463.3779 349.3574 463.2393 350.1895 462.626 c350.4307 462.4409 L350.5215 462.2729 350.4004 462.0552 350.2422 462.0596 c349.5361 462.4854 348.8936 462.8594 347.9805 463.3672 c347.2246 463.7871 346.4375 464.1914 345.8154 464.5205 c345.7109 464.6626 345.8223 464.9028 345.9697 464.9214 c346.3779 464.7451 L347.0391 464.4448 347.1338 464.4922 347.2119 465.1704 c347.3555 467.3726 L347.373 467.8164 347.3193 467.8457 346.8281 468.1191 C344.4922 469.418 lf1 D346.9199 468.8228 m347.4121 468.5493 347.4971 468.5361 347.5273 468.9214 c347.6445 470.8696 L347.7236 471.7153 347.7539 472.0171 347.7158 472.1558 c347.6807 472.1753 L347.5605 472.1245 347.2422 471.8823 346.5908 471.4561 c345.0195 470.3662 L344.6191 470.1021 344.6729 470.0728 345.0938 469.8384 C346.9199 468.8228 lf*UUu*u0 D358.6143 459.1221 m358.1201 458.5796 357.7939 458.1621 357.8486 457.7744 c357.8887 457.46 358.0469 457.1563 359.2314 456.0723 c360.876 454.5684 361.1621 454.4058 362.8604 454.8999 c363.0586 454.8188 363.2656 454.5693 363.2607 454.415 c362.7275 454.0674 361.6514 453.541 361.207 453.4111 c360.6045 454.0015 359.3398 455.1777 357.6816 456.6953 c356.1396 458.1045 L355.3848 458.7954 354.6338 459.4624 353.9922 460.0098 c353.9121 460.1616 354.0654 460.4189 354.248 460.3511 c354.7422 459.999 L355.498 459.4272 355.6602 459.3379 356.6875 460.4663 c360.3604 464.502 L361.3867 465.6304 361.2832 465.7847 360.6563 466.4976 c360.2803 466.9204 L360.2266 467.0693 360.4238 467.2866 360.5957 467.2148 c361.3174 466.5156 361.9736 465.895 362.6563 465.272 c363.3076 464.6758 363.9844 464.0767 364.6563 463.4951 c364.75 463.3301 364.5674 463.0996 364.3994 463.1538 c364.0342 463.4082 L363.2686 463.9692 363.1055 464.0586 362.0781 462.9302 C358.6143 459.1221 lf*UUu*u368.0898 449.6606 m366.8936 448.6724 366.9746 448.5049 367.5078 447.7212 c367.7549 447.3525 L367.7656 447.1787 367.5498 447.0264 367.4023 447.1133 c366.8633 447.8135 366.2988 448.5195 365.7373 449.2012 c365.1758 449.8823 364.5645 450.6011 363.9795 451.2637 c363.9229 451.4248 364.1133 451.6084 364.2813 451.5654 c364.5957 451.2524 L365.2637 450.5806 365.4121 450.4688 366.6074 451.4575 c370.8027 454.9253 L371.998 455.9136 371.916 456.0811 371.3848 456.8652 c371.1367 457.2339 L371.127 457.4072 371.3418 457.5596 371.4893 457.4746 c372.0293 456.7744 372.5918 456.0684 373.1797 455.356 c373.7422 454.6743 374.3271 453.9868 374.9121 453.3223 c374.9688 453.1611 374.7793 452.978 374.6104 453.021 c374.2959 453.334 L373.6279 454.0059 373.4795 454.1172 372.2842 453.1289 C368.0898 449.6606 lf*UUu*u381.9775 443.7227 m382.6855 442.6499 383.3184 441.7202 383.5742 441.3843 c383.3057 441.2065 382.3887 440.6011 381.8359 440.1885 c381.6943 440.1909 381.4707 440.4761 381.4336 440.6924 c382.0313 441.3281 382.21 441.8301 381.9111 442.5474 c381.6982 443.0562 381.4336 443.4834 381.0801 444.0195 c380.5156 444.874 L380.0508 445.5776 380.0264 445.5615 379.3418 445.1094 c377.1543 443.6646 L376.8486 443.4629 376.835 443.4297 377.0898 443.0444 c377.7422 442.0562 L378.7051 440.5986 378.9063 440.3462 379.5186 440.5347 c380.0234 440.6753 L380.1758 440.6309 380.3857 440.3125 380.3428 440.166 c380.0146 439.9727 379.54 439.7075 379.0879 439.4087 c378.6357 439.1104 378.2168 438.7861 377.8496 438.5176 c377.6963 438.5371 377.4863 438.855 377.5059 439.0122 c377.8936 439.4609 L378.3076 439.9507 378.1543 440.2354 377.1924 441.6929 c376.54 442.6812 L376.2852 443.0664 376.25 443.0674 375.9443 442.8652 c374.2324 441.7354 L372.9375 440.8799 373 440.7046 373.4717 439.8848 c373.875 439.1411 L373.8672 438.9673 373.6357 438.8384 373.498 438.9414 c372.8145 440.0298 372.3291 440.7915 371.8418 441.5283 c371.3564 442.2656 370.8457 443.0112 370.3125 443.7656 c370.2725 443.9316 370.4814 444.0938 370.6445 444.0332 c370.9248 443.689 L371.5186 442.9497 371.6543 442.8232 372.9492 443.6787 c377.4971 446.6816 L378.792 447.5371 378.7285 447.7124 378.2949 448.5562 c378.1758 448.79 L378.1836 448.9639 378.415 449.0923 378.5518 448.9907 c378.915 448.3882 379.4004 447.626 379.8867 446.8887 C381.9775 443.7227 lf*UUu*u386.1367 423.2725 m383.4463 422.2231 380.3447 424.2441 378.8721 428.02 c377.2227 432.2446 378.4463 435.521 380.877 436.4692 c383.6631 437.5552 386.8047 435.5933 388.3359 431.668 c390.0215 427.3501 388.6221 424.2417 386.1367 423.2725 cf1 D382.2646 434.0815 m380.3809 433.3467 378.2441 431.2427 379.4902 428.0464 c380.3223 425.9155 382.1543 424.6484 384.8984 425.7188 c386.9609 426.5229 388.8555 428.7256 387.6953 431.6978 c386.9668 433.5669 385.1738 435.2158 382.2646 434.0815 cf*UUu*u0 D390.4746 418.9229 m391.8564 419.1968 392.0254 419.2505 391.9121 420.1914 c391.8525 420.7129 L391.9258 420.8706 392.1563 420.9165 392.2598 420.7729 c392.5938 419.5479 392.9717 417.8809 393.2939 416.2642 c393.6016 414.7266 393.7256 413.3574 393.5527 412.4214 c393.3652 411.3389 392.835 410.4756 391.7988 410.27 c390.4746 410.0073 389.5332 411.2759 389.0527 412.1851 c388.9863 412.2944 388.8789 412.2324 388.8086 412.1362 c387.1807 410.1743 386.1543 408.9458 385.7783 407.9077 c385.5439 407.2876 385.5713 406.6987 385.6035 406.459 c385.5664 406.3491 385.4082 406.3179 385.3242 406.3628 c385.2344 406.5908 385.1152 406.9565 384.9775 407.6465 c384.5996 409.5391 384.9561 410.6758 386.0547 412.1436 c386.5527 412.7959 387.2344 413.5049 387.7012 414.0894 c388.0615 414.5298 388.0762 414.7578 387.9453 415.4087 c387.8271 416 387.8096 416.0166 387.5068 415.957 c385.665 415.5918 L384.1396 415.2891 384.1318 415.103 384.2314 414.1597 c384.2744 413.7173 L384.2012 413.5591 383.9385 413.5273 383.8486 413.6729 c383.7051 414.5464 383.542 415.4365 383.3691 416.3042 c383.1953 417.1714 383.0039 418.0557 382.7939 418.9575 c382.8203 419.1265 383.0674 419.2368 383.2031 419.0796 c383.334 418.6543 L383.6055 417.7451 383.6836 417.5762 385.209 417.8784 C390.4746 418.9229 lf1 D388.8594 416.2251 m388.3994 416.1338 388.3711 416.1279 388.5596 415.1816 c388.9453 413.25 389.8125 412.4995 391.1807 412.7705 c392.3164 412.9961 393.1094 414.1982 392.7656 415.9136 c392.5615 416.9385 392.5146 416.9497 391.8525 416.8184 C388.8594 416.2251 lf*UUu*u0 D388.4844 391.8896 m388.0439 391.876 386.2402 391.8193 385.9053 391.749 c385.7393 391.9043 385.6719 392.1846 385.6787 392.4258 c385.9766 392.7568 386.457 393.3555 387.6143 394.8398 c391.3828 399.6646 L392.4131 401.0039 392.9502 401.6646 393.1602 402.0132 c393.1582 402.0732 392.9971 402.0684 392.2188 402.0439 c389.3604 401.9546 L388.2607 401.9204 386.9111 401.8584 386.4824 401.5029 c386.2686 401.3149 386.1904 400.9707 386.1475 400.4663 c386.1182 400.0229 L386.0205 399.8389 385.7412 399.8501 385.6904 400.0488 c385.6973 400.7935 385.6875 401.5776 385.6641 402.3418 c385.6367 403.1855 385.6064 403.728 385.5547 404.4307 c385.623 404.5938 385.8711 404.6416 385.9785 404.4844 c386.0654 404.0444 L386.1221 403.6641 386.1914 403.3042 386.4307 403.1709 c386.8936 402.9238 388.1689 402.9634 389.3271 402.9995 c392.8027 403.1084 L393.9463 403.144 394.1816 403.1309 394.5859 403.8276 c394.7109 404.0527 394.8105 404.6191 394.8457 404.9019 c394.8809 405.2046 L394.9639 405.3481 395.2578 405.3374 395.3086 405.1377 c395.2734 404.3721 395.3223 403.2666 395.3379 402.7642 c395.3516 402.3423 395.3809 401.8604 395.4258 401.3799 c394.8057 401.0186 393.0264 398.77 392.4902 398.0493 c390.9688 395.9907 L390.3213 395.125 388.8242 393.208 388.7432 393.0039 c388.7891 392.9453 388.8623 392.9482 389.0977 392.9551 c391.9561 393.0439 L393.0566 393.0781 394.4043 393.1406 394.834 393.5156 c395.0479 393.7041 395.125 394.0283 395.1689 394.5322 c395.1982 394.9961 L395.2949 395.1807 395.5742 395.1689 395.625 394.9668 c395.6191 394.1816 395.6279 393.4375 395.6523 392.6543 c395.6797 391.79 395.71 391.2676 395.7617 390.5479 c395.6934 390.3848 395.4453 390.3369 395.3389 390.4941 c395.25 390.9551 L395.1943 391.335 395.125 391.6748 394.8867 391.8086 c394.4229 392.0752 393.1475 392.0352 391.9893 391.999 C388.4844 391.8896 lf*UUu*u387.4678 383.5723 m385.9346 383.8145 385.8633 383.6426 385.627 382.7227 c385.5146 382.292 L385.3906 382.1689 385.1348 382.2305 385.1016 382.3994 c385.2695 383.2686 385.4258 384.1602 385.5645 385.0352 c385.7041 385.9082 385.8379 386.8438 385.9482 387.7227 c386.0313 387.873 386.2939 387.8516 386.374 387.6953 c386.3477 387.252 L386.2861 386.3047 386.3008 386.1191 387.835 385.877 c393.2148 385.0254 L394.749 384.7822 394.8203 384.9541 395.0557 385.874 c395.1689 386.3047 L395.292 386.4277 395.5488 386.3662 395.582 386.1982 c395.4141 385.3291 395.2568 384.4375 395.1123 383.5234 c394.9727 382.6504 394.8457 381.7539 394.7354 380.874 c394.6523 380.7236 394.3887 380.7461 394.3096 380.9004 c394.3359 381.3447 L394.3975 382.292 394.3818 382.4775 392.8486 382.7207 C387.4678 383.5723 lf*UUu*u387.1504 374.8691 m387.3086 375.3682 387.3018 375.3477 386.9795 375.6406 c385.5527 376.96 L384.8516 377.6045 384.7852 377.541 384.4902 376.8545 c384.2441 376.3203 L384.1035 376.2178 383.8594 376.3164 383.8516 376.4863 c384.0732 377.0908 384.2744 377.7236 384.5371 378.5059 c384.7373 379.1387 384.9111 379.7363 385.0967 380.416 c385.209 380.5293 385.4238 380.4814 385.5068 380.3066 c385.3945 379.71 L385.2754 379.1357 385.334 378.8857 385.7031 378.4521 c385.9932 378.1064 386.4824 377.6133 387.1094 376.9707 c391.248 372.7646 L391.6152 372.373 391.8955 372.0938 392.1514 372.0762 c392.0361 371.375 392.4082 370.5596 392.3965 370.5215 c392.3477 370.3682 392.2754 370.2852 392.1816 370.2314 c391.4561 370.125 390.7207 370.084 389.9951 369.9775 c383.2715 369.0771 L382.1953 368.9346 382.0674 368.8691 381.6318 367.9316 c381.499 367.6582 L381.3525 367.5361 381.1152 367.6113 381.0889 367.7617 c381.3652 368.54 381.6035 369.2441 381.9189 370.2422 c382.1807 371.0654 382.4199 371.9189 382.6191 372.5977 c382.7373 372.7285 382.9941 372.668 383.042 372.5264 c382.9502 372.0918 L382.7871 371.3828 382.8525 371.2988 383.5322 371.3574 c385.7168 371.6543 L386.1543 371.7266 386.1729 371.7832 386.3418 372.3203 C387.1504 374.8691 lf1 D387.0498 372.3691 m386.8789 371.833 386.8828 371.748 387.2666 371.7939 c389.1973 372.0664 L390.04 372.1563 390.3418 372.1875 390.4707 372.252 c390.4824 372.29 L390.4092 372.3984 390.1084 372.6621 389.5615 373.2168 c388.1836 374.54 L387.8457 374.8809 387.8271 374.8232 387.6816 374.3633 C387.0498 372.3691 lf*UUu800 Ar0 D0.9 w 10 M280 475.2998 m281 475.7998 281.3999 476.8999 281 477.7998 c280.6001 478.7998 279.5 479.2002 278.5 478.7998 c277.6001 478.2998 277.1001 477.2002 277.6001 476.2998 c278 475.2998 279.1001 474.8999 280 475.2998 cfUu321.5996 477.7998 m322.5 478.2002 322.9004 479.2998 322.5 480.2998 c322.0996 481.2002 321 481.6001 320 481.2002 c319.0996 480.7998 318.7002 479.7002 319.0996 478.7998 c319.5 477.7998 320.5996 477.3999 321.5996 477.7998 cfU0 R0 0 0 1 K1 J 2 w336.2002 303.2002 m333.2002 302.5 332.5 302 y322.0996 299 319.7998 299.2002 v317.5 299.2998 317.5 299.2002 317 298.7998 c316.5 298.5 305.8999 298.0996 304 298.5 c302 298.7998 301.2998 298.5996 y292.3999 298.7998 290.8999 299.7002 v289.5 300.5996 286.3999 300.4004 y276.5 302.2998 275.6001 303.4004 V272.6001 304.2998 L269.6001 305.0996 267.7002 306 264.5 307.7998 C264.3999 307.7998 259.7002 310.2002 259.6001 310.2998 c256 311.7998 252.7002 314.4004 y243 321.0996 241 323.5 v238.8999 325.7998 238.6001 325.5 238.1001 325.7998 c237.5 326.2002 236 328 y233.8999 330.0996 233 331.4004 v232.2002 332.5996 226.7998 338.4004 224.6001 342.2998 c222.3999 346.2002 221.2002 348 y218.3999 352.2998 216.7002 357.0996 v214.8999 361.7998 214.3999 362.2002 y212.1001 368.9004 211.8999 370.0996 v211.7002 371.2998 211.3999 374.0996 210.8999 374.5 c210.2998 374.7998 208.8999 383.5 208.8999 385.9004 c208.8999 388.4004 209 390.5 208.6001 391.0996 c208.2998 391.5996 208.6001 396.2998 208.6001 397 c208.6001 397.7002 208.7998 400.3999 y208.7998 408.6001 209.6001 409.7002 v210.5 410.7998 210.2998 415.2002 y212.2998 425 213.2998 426.2002 v214.3999 427.5 214.3999 429.2002 y218.2998 440 219.7002 441.2002 v221.1001 442.3999 220.8999 443.7002 y223.2002 448.1001 223.7002 448.2002 v224.2002 448.3999 227.8999 455.7998 230.7998 457.8999 c233.6001 460 233.7002 461.2002 234 461.7002 c234.3999 462.2002 241 469.5 243.6001 470.7998 c246.2002 472 245.3999 471.7002 246.6001 473.2002 c247.7998 474.7998 258.8999 481.7002 261.6001 482.7002 c264.2002 483.7998 265.7998 484.8999 y279.8999 491 283.7002 491 v287.6001 491 288.2998 492.1001 288.7998 492.1001 c289.3999 492.1001 304.5 494.2002 306.1001 493.6001 c312.2002 494 315.4004 493.1001 v318.5996 492.2002 317.2998 492.7998 318.7998 492.7998 c320.2002 492.7998 323.9004 492.2002 324.5996 491.7002 c325.2998 491.2002 326.5 491.3999 y329.7998 491.2002 330 490.5 v330.2002 489.7998 330.9004 490.1001 331.5996 490.1001 c332.2998 490.1001 337.2002 489.5 339.7002 487.5 c344.7998 483.3999 347.5996 484.2998 348.5 483.7998 c349.4004 483.2998 349.4004 484 350.5996 482.7002 c351.7998 481.5 353.7998 481 y359.7002 477.5 359 477.7998 v359.0996 477.7002 361.2002 476.8999 362.2002 475.8999 c362.5 475.6001 367.7002 473.6001 370.7998 468.7998 c372.2998 468 372.4004 467.2002 v372.5996 466.5 373.7002 466.3999 y380.5 463.5 382.0996 456.8999 v382.2998 456.2002 383.9004 455.1001 y387.2002 451.1001 388.0996 448.6001 v389 446.1001 391.2998 443.3999 y394.2998 436.3999 396 434.2002 v397.7998 431.8999 397.5996 430.1001 y401.2998 424.2998 400.9004 419 v400.7998 417.1001 401.7998 415.7002 y402.4004 410 402.9004 407.3999 v403.7998 402.7998 403.0996 404.8999 y402.9004 399.1001 403.5996 394 v403.7998 392.2002 403.5996 391 y403.2002 382.5996 402.5 380.2998 v401.7998 378 402 377.7002 y400.5 372.4004 399 366.2002 v398.5 364.0996 396.7002 363.9004 396.7002 362.9004 c396.7002 361.7998 394.0996 358.2002 392.0996 354.2998 c391.2998 352.5 387.9004 344.4004 y386.5 342.7998 384.4004 338.2002 v383.5996 336.4004 381.9004 335.2002 381.2002 333.7998 c380.5 332.4004 375.2002 330.2998 375.2002 328.4004 c375.2002 328 372.0996 326.0996 y366.2998 321 362.5996 316.4004 v361.5 315.0996 360.7998 315.4004 360.0996 314.7002 c359.4004 314 352.5 309.7002 350.4004 309 c348.2998 308.2998 346.2002 307.0996 y344.0996 306 339.2002 304.2998 V336.2002 303.2002 Ls332.5 324.7002 m335.5996 326.7998 340.9004 327.2002 y342.2998 327.7002 343 328.9004 v343.7002 330.0996 347.0996 332.5996 347.7998 332.2998 c348.5 331.9004 352.7998 336.2998 353.0996 337.5 c353.4004 339.5 359.2998 342.0996 360.5996 344 c362.4004 346.7002 364.2002 349 365.9004 351.0996 c367.7002 353.2002 369.7002 355 370.0996 356.2002 c370.7002 357.7998 373.0996 364.0996 373.5 365.5 c373.7998 366.9004 376.7998 372 y379.5996 378.7002 379.2998 380.5 v378.9004 382.2002 380 384.4004 y380.7002 391.7002 l380.7998 396 l381.0996 402 380.4004 404.3999 v379.5996 406.8999 379.5996 409 y378.5996 415.7002 377.5 417.7998 v376.5 419.8999 375.7998 422.7002 y373.2998 430.1001 371.5996 431.8999 v369.7998 433.6001 368.7002 436.7998 y365.2002 441.3999 362 444.8999 v358.9004 448.3999 356.7998 450.8999 y354.7002 453 353.5996 453.7002 v352.5 454.3999 349.7002 454.7998 349.7002 455.7998 c349.7002 456.8999 345.4004 461.1001 340.9004 462.1001 c336.4004 463.2002 334 465.2002 y329.2998 468.5 326.7998 467.7998 v324.4004 467.1001 321.7002 468.1001 320.9004 469.2002 c320.2002 470.1001 303.2998 472.7002 300.3999 470.2002 c297.6001 467.7998 292.3999 469.5 y285 469.2002 284.2998 467.1001 v283.6001 465 280.3999 465.2998 280 465.2998 c279.7002 465.2998 269.7998 463.6001 263.7998 457.2002 c257.8999 450.8999 256.7998 451.8999 255.8999 450.8999 c255 449.7998 250.8999 447.1001 249.7998 444.8999 c248.7998 443 246.2002 440.2998 y238.1001 430.5 238.1001 424.7998 v238.1001 419.2002 235.7002 421.7002 234.6001 417.1001 c233.6001 412.5 232.5 409.2998 y230.7998 399.1001 231.5 394.9004 v232.2002 390.7002 231.7998 388.5996 y235 377.2998 236 371 v237.1001 364.5996 238.5 365 y239.6001 358.2998 246.2002 350.2002 v252.8999 342.0996 254.7002 341.4004 y263.1001 333.2998 265.8999 332.2998 v268.7998 331.2002 272.5 328.7998 272.6001 328.7002 C276.8999 325.9004 L277.5 325 279 323.7002 283.7998 323.4004 c288.7002 323 303 321.5996 306.1001 320.7998 c309.2002 320 313.4004 320 314.5 320.7998 c315.7002 321.5996 320 323.2002 321.5 322.7002 c323 322.0996 327.2002 322.9004 Y332.5 324.7002 Lsu0 O0 0 0 1 k407 395.2002 m407 396.5254 408.0742 397.6001 409.4004 397.6001 c410.7256 397.6001 411.7998 396.5254 411.7998 395.2002 c411.7998 393.875 410.7256 392.7998 409.4004 392.7998 c408.0742 392.7998 407 393.875 407 395.2002 cf409.4004 395.2002 mFUu409.4004 398.2002 m410.7002 398.2998 411.7998 399.3999 411.7002 400.7998 c411.5996 402.1001 410.5 403.1001 409.2002 403 c407.7998 403 406.7998 401.7998 406.9004 400.5 c407 399.2002 408.0996 398.2002 409.4004 398.2002 cfUu409.0996 403.6001 m410.5 403.7998 411.4004 405 411.2998 406.2998 c411.0996 407.6001 409.9004 408.6001 408.5996 408.3999 c407.2998 408.2998 406.2998 407.1001 406.5 405.7998 c406.5996 404.5 407.7998 403.5 409.0996 403.6001 cfUu408.5 409 m409.9004 409.2002 410.7998 410.5 410.5996 411.7998 c410.2998 413.1001 409.0996 414 407.7998 413.7998 c406.5 413.6001 405.5996 412.2998 405.7998 411 c406 409.7002 407.2002 408.7998 408.5 409 cfUu407.7002 414.3999 m409 414.6001 409.7998 415.8999 409.5 417.2002 c409.2998 418.5 408 419.2998 406.7002 419.1001 c405.4004 418.7998 404.5996 417.5 404.7998 416.2002 c405.0996 414.8999 406.4004 414.1001 407.7002 414.3999 cfUu406.5996 419.6001 m407.7998 420 408.5996 421.2998 408.2998 422.6001 c407.9004 423.8999 406.5996 424.6001 405.2998 424.2998 c404 424 403.2998 422.6001 403.5996 421.2998 c403.9004 420.1001 405.2998 419.2998 406.5996 419.6001 cfUu405.0996 424.8999 m406.4004 425.2998 407.0996 426.6001 406.7002 427.8999 c406.2998 429.2002 404.9004 429.8999 403.7002 429.3999 c402.4004 429 401.7002 427.7002 402.0996 426.3999 c402.5 425.1001 403.9004 424.3999 405.0996 424.8999 cfUu403.5 430 m404.7002 430.5 405.2998 431.8999 404.9004 433.1001 c404.4004 434.3999 403 435 401.7002 434.5 c400.5 434 399.9004 432.6001 400.4004 431.3999 c400.7998 430.1001 402.2002 429.5 403.5 430 cfUu401.5 435 m402.7002 435.6001 403.2998 437 402.7002 438.2002 c402.2002 439.3999 400.7998 440 399.5996 439.5 c398.2998 438.8999 397.7998 437.5 398.2998 436.2998 c398.9004 435.1001 400.2998 434.5 401.5 435 cfUu399.2998 440 m400.5 440.6001 401 442 400.4004 443.2002 c399.7998 444.3999 398.2998 444.8999 397.0996 444.2998 c395.9004 443.7002 395.5 442.2002 396.0996 441 c396.7002 439.8999 398.0996 439.3999 399.2998 440 cfUu396.7998 444.7998 m398 445.5 398.4004 446.8999 397.7002 448.1001 c397.0996 449.2002 395.5996 449.6001 394.4004 449 c393.2998 448.2998 392.9004 446.7998 393.5 445.7002 c394.2002 444.5 395.7002 444.1001 396.7998 444.7998 cfUu394.0996 449.5 m395.2002 450.2002 395.5996 451.7002 394.7998 452.7998 c394.0996 453.8999 392.5996 454.2998 391.5 453.5 c390.4004 452.7998 390.0996 451.2998 390.7998 450.2002 c391.5 449.1001 393 448.7998 394.0996 449.5 cfUu391.2002 454 m392.2998 454.7998 392.5 456.2998 391.7002 457.3999 c390.9004 458.5 389.4004 458.7002 388.2998 457.8999 c387.2998 457.1001 387 455.6001 387.7998 454.5 c388.5996 453.5 390.0996 453.2002 391.2002 454 cfUu388 458.3999 m389 459.2002 389.2002 460.7002 388.2998 461.7998 c387.5 462.7998 386 463 385 462.1001 c383.9004 461.2998 383.7998 459.7998 384.5996 458.7002 c385.4004 457.7002 387 457.5 388 458.3999 cfUu384.5996 462.6001 m385.5996 463.5 385.5996 465 384.7998 466 c383.9004 467 382.2998 467.1001 381.4004 466.2002 c380.4004 465.2998 380.2998 463.7002 381.2002 462.7998 c382.0996 461.7998 383.5996 461.7002 384.5996 462.6001 cfUu380.9004 466.6001 m381.9004 467.5 381.9004 469.1001 381 470 c380 470.8999 378.5 470.8999 377.5 470 c376.5996 469.1001 376.5996 467.5 377.5 466.6001 c378.5 465.6001 380 465.6001 380.9004 466.6001 cfUu377.0996 470.3999 m378 471.3999 377.9004 472.8999 376.9004 473.7998 c376 474.7002 374.4004 474.6001 373.5 473.6001 c372.5996 472.6001 372.7002 471.1001 373.7002 470.2002 c374.7002 469.2998 376.2002 469.3999 377.0996 470.3999 cfUu373.0996 474 m373.9004 475.1001 373.7998 476.6001 372.7002 477.3999 c371.7002 478.2998 370.2002 478.1001 369.2998 477.1001 c368.5 476 368.7002 474.5 369.7002 473.7002 c370.7002 472.7998 372.2998 473 373.0996 474 cfUu368.9004 477.3999 m369.7002 478.5 369.4004 480 368.4004 480.7998 c367.2998 481.6001 365.7998 481.2998 365 480.2998 c364.2002 479.2002 364.4004 477.7002 365.5 476.8999 c366.5996 476.1001 368.0996 476.2998 368.9004 477.3999 cfUu364.5 480.6001 m365.2002 481.7002 364.9004 483.2002 363.7998 483.8999 c362.7002 484.7002 361.2002 484.2998 360.5 483.2002 c359.7002 482.1001 360 480.6001 361.2002 479.8999 c362.2998 479.2002 363.7998 479.5 364.5 480.6001 cfUu360 483.5 m360.5996 484.7002 360.2002 486.2002 359.0996 486.7998 c357.9004 487.5 356.4004 487.1001 355.7998 485.8999 c355.0996 484.7998 355.5 483.2998 356.7002 482.6001 c357.7998 482 359.2998 482.3999 360 483.5 cfUu355.2998 486.2002 m355.9004 487.3999 355.4004 488.8999 354.2002 489.5 c353 490.1001 351.5996 489.6001 351 488.3999 c350.4004 487.2002 350.7998 485.7998 352 485.2002 c353.2002 484.6001 354.7002 485 355.2998 486.2002 cfUu350.4004 488.7002 m351 489.8999 350.4004 491.2998 349.2002 491.8999 c348 492.3999 346.5996 491.7998 346 490.6001 c345.5 489.3999 346 488 347.2998 487.3999 c348.5 486.8999 349.9004 487.5 350.4004 488.7002 cfUu345.5 490.8999 m346 492.1001 345.4004 493.5 344.0996 494 c342.9004 494.5 341.5 493.7998 341 492.6001 c340.5 491.2998 341.0996 490 342.4004 489.5 c343.5996 489 345 489.6001 345.5 490.8999 cfUu340.4004 492.7998 m340.9004 494.1001 340.2002 495.3999 338.9004 495.7998 c337.5996 496.2002 336.2998 495.5 335.9004 494.2998 c335.5 493 336.0996 491.7002 337.4004 491.2002 c338.7002 490.7998 340 491.5 340.4004 492.7998 cfUu335.2998 494.5 m335.5996 495.7002 334.9004 497.1001 333.5996 497.3999 c332.2998 497.7998 331 497 330.5996 495.7002 c330.2998 494.3999 331.0996 493.1001 332.2998 492.7002 c333.5996 492.3999 335 493.2002 335.2998 494.5 cfUu330.0996 495.7998 m330.4004 497.1001 329.5 498.3999 328.2002 498.7002 c326.9004 499 325.5996 498.2002 325.4004 496.7998 c325.0996 495.5 325.9004 494.2998 327.2002 494 c328.5 493.7002 329.7998 494.5 330.0996 495.7998 cfUu324.7998 497 m325 498.2998 324.0996 499.5 322.7998 499.7002 c321.5 499.8999 320.2002 499 320 497.7002 c319.7998 496.3999 320.7002 495.2002 322 495 c323.2998 494.7002 324.5996 495.6001 324.7998 497 cfUu319.4004 497.7998 m319.5996 499.1001 318.5996 500.2998 317.2998 500.3999 c316 500.6001 314.7998 499.6001 314.5996 498.2998 c314.5 497 315.5 495.7998 316.7998 495.7002 c318.0996 495.5 319.2998 496.5 319.4004 497.7998 cfUu314.0996 498.3999 m314.0996 499.7002 313.0996 500.7998 311.7998 500.8999 c310.4004 501 309.2998 499.8999 309.2002 498.6001 c309.2002 497.2998 310.2002 496.1001 311.5 496.1001 c312.9004 496 314 497 314.0996 498.3999 cfUu297.7998 498.2998 m297.7002 499.7002 296.5 500.6001 295.2002 500.5 c293.8999 500.2998 292.8999 499.1001 293.1001 497.7998 c293.2002 496.5 294.3999 495.5 295.7002 495.7002 c297 495.7998 298 497 297.7998 498.2998 cfUu292.5 497.7998 m292.2998 499.1001 291 500 289.7002 499.7998 c288.3999 499.5 287.5 498.2998 287.7002 497 c287.8999 495.7002 289.1001 494.7998 290.5 495 c291.7998 495.2002 292.7002 496.3999 292.5 497.7998 cfUu287.1001 496.8999 m286.8999 498.2002 285.6001 499 284.2998 498.7998 c283 498.5 282.1001 497.2002 282.3999 495.8999 c282.7002 494.6001 284 493.7998 285.2998 494 c286.6001 494.2998 287.3999 495.6001 287.1001 496.8999 cfUu281.7998 495.7998 m281.5 497.1001 280.2002 497.7998 278.8999 497.5 c277.6001 497.1001 276.7998 495.7998 277.2002 494.5 c277.5 493.2002 278.7998 492.5 280.1001 492.7998 c281.3999 493.2002 282.2002 494.5 281.7998 495.7998 cfUu276.6001 494.3999 m276.2002 495.6001 274.7998 496.2998 273.6001 495.8999 c272.2998 495.5 271.6001 494.1001 272 492.8999 c272.3999 491.6001 273.7998 490.8999 275.1001 491.2998 c276.2998 491.7002 277 493.1001 276.6001 494.3999 cfUu271.5 492.7002 m271 493.8999 269.6001 494.5 268.3999 494.1001 c267.1001 493.6001 266.5 492.2002 267 491 c267.5 489.7002 268.7998 489.1001 270.1001 489.6001 c271.2998 490 272 491.3999 271.5 492.7002 cfUu266.3999 490.7002 m265.8999 491.8999 264.5 492.5 263.2998 492 c262 491.3999 261.5 490 262 488.7998 c262.6001 487.6001 264 487 265.2002 487.5 c266.3999 488.1001 267 489.5 266.3999 490.7002 cfUu261.5 488.5 m260.8999 489.7002 259.3999 490.2002 258.2998 489.6001 c257.1001 489 256.6001 487.5 257.2002 486.2998 c257.7998 485.2002 259.2998 484.7002 260.3999 485.2998 c261.6001 485.8999 262.1001 487.2998 261.5 488.5 cfUu256.7002 486.1001 m256 487.2002 254.5 487.6001 253.3999 486.8999 c252.2002 486.2998 251.7998 484.7998 252.5 483.7002 c253.2002 482.5 254.6001 482.1001 255.7998 482.7998 c256.8999 483.3999 257.2998 484.8999 256.7002 486.1001 cfUu252 483.3999 m251.2998 484.5 249.7998 484.7998 248.7002 484.1001 c247.5 483.2998 247.2002 481.7998 248 480.7002 c248.7002 479.6001 250.2002 479.2998 251.2998 480 c252.3999 480.7002 252.7002 482.2002 252 483.3999 cfUu247.5 480.3999 m246.7002 481.5 245.2002 481.7002 244.1001 480.8999 c243 480.2002 242.7998 478.6001 243.6001 477.6001 c244.2998 476.5 245.8999 476.2002 246.8999 477 c248 477.7998 248.2998 479.2998 247.5 480.3999 cfUu243.1001 477.2002 m242.2998 478.2002 240.7002 478.3999 239.7002 477.6001 c238.7002 476.7002 238.5 475.2002 239.2998 474.2002 c240.2002 473.1001 241.7002 473 242.7002 473.7998 c243.7998 474.7002 243.8999 476.2002 243.1001 477.2002 cfUu238.8999 473.7998 m238 474.7998 236.5 474.8999 235.5 474 c234.5 473.1001 234.3999 471.6001 235.2998 470.6001 c236.2002 469.6001 237.7002 469.5 238.7002 470.3999 c239.7002 471.2998 239.7998 472.7998 238.8999 473.7998 cfUu234.8999 470.2002 m233.8999 471.1001 232.3999 471.1001 231.5 470.2002 c230.5 469.2002 230.5 467.7002 231.5 466.7998 c232.3999 465.7998 233.8999 465.7998 234.8999 466.7998 c235.7998 467.7002 235.7998 469.2002 234.8999 470.2002 cfUu231.1001 466.2998 m230.1001 467.2002 228.6001 467.2002 227.7002 466.2002 c226.7998 465.2002 226.7998 463.7002 227.7998 462.7998 c228.7998 461.8999 230.3999 462 231.2002 462.8999 c232.1001 463.8999 232.1001 465.5 231.1001 466.2998 cfUu227.5 462.2998 m226.3999 463.2002 224.8999 463 224.1001 462 c223.2002 460.8999 223.3999 459.3999 224.3999 458.6001 c225.3999 457.7002 227 457.8999 227.7998 458.8999 c228.6001 460 228.5 461.5 227.5 462.2998 cfUu224.1001 458.1001 m223 458.8999 221.5 458.7002 220.7002 457.6001 c219.8999 456.5 220.1001 455 221.2002 454.2002 c222.2998 453.3999 223.7998 453.7002 224.6001 454.7002 c225.3999 455.7998 225.1001 457.2998 224.1001 458.1001 cfUu220.8999 453.7002 m219.7998 454.5 218.2998 454.1001 217.5 453 c216.7998 451.8999 217.1001 450.3999 218.2998 449.7002 c219.3999 449 220.8999 449.2998 221.6001 450.3999 c222.2998 451.5 222 453 220.8999 453.7002 cfUu217.8999 449.2002 m216.7998 449.8999 215.2998 449.5 214.6001 448.2998 c214 447.2002 214.3999 445.7002 215.5 445 c216.7002 444.3999 218.2002 444.7002 218.7998 445.8999 c219.5 447.1001 219.1001 448.5 217.8999 449.2002 cfUu215.2002 444.5 m214.1001 445.1001 212.6001 444.6001 212 443.5 c211.3999 442.2998 211.8999 440.7998 213.1001 440.2002 c214.2002 439.6001 215.7002 440.1001 216.2998 441.2998 c216.8999 442.5 216.3999 443.8999 215.2002 444.5 cfUu212.7998 439.7002 m211.6001 440.2002 210.2002 439.7002 209.6001 438.5 c209.1001 437.2998 209.6001 435.7998 210.7998 435.2998 c212 434.7002 213.5 435.2998 214 436.5 c214.6001 437.7002 214 439.1001 212.7998 439.7002 cfUu210.6001 434.7002 m209.3999 435.2002 208 434.6001 207.5 433.3999 c207 432.1001 207.6001 430.7002 208.8999 430.2002 c210.1001 429.7998 211.5 430.3999 212 431.6001 c212.5 432.8999 211.7998 434.2998 210.6001 434.7002 cfUu208.7002 429.7002 m207.3999 430.1001 206 429.3999 205.6001 428.1001 c205.2002 426.8999 205.8999 425.5 207.2002 425.1001 c208.3999 424.7002 209.7998 425.3999 210.2002 426.7002 c210.6001 427.8999 209.8999 429.2998 208.7002 429.7002 cfUu207 424.5 m205.7002 424.8999 204.3999 424.1001 204.1001 422.7998 c203.7002 421.6001 204.5 420.2002 205.7998 419.8999 c207 419.5 208.3999 420.2998 208.7002 421.6001 c209.1001 422.8999 208.2998 424.2002 207 424.5 cfUu205.6001 419.2998 m204.2998 419.6001 203 418.7998 202.7998 417.5 c202.5 416.2002 203.2998 414.8999 204.6001 414.6001 c205.8999 414.2998 207.2002 415.2002 207.5 416.5 c207.7002 417.7998 206.8999 419 205.6001 419.2998 cfUu204.5 414 m203.2002 414.2002 201.8999 413.2998 201.7002 412 c201.5 410.7002 202.3999 409.5 203.7002 409.2998 c205.1001 409.1001 206.2998 410 206.5 411.2998 c206.7002 412.6001 205.7998 413.7998 204.5 414 cfUu203.7002 408.7002 m202.2998 408.7998 201.1001 407.8999 201 406.5 c200.8999 405.2002 201.7998 404 203.2002 403.8999 c204.5 403.7998 205.7002 404.7002 205.7998 406 c205.8999 407.3999 205 408.5 203.7002 408.7002 cfUu203.1001 403.2998 m201.7998 403.3999 200.6001 402.3999 200.6001 401 c200.5 399.7002 201.5 398.6001 202.7998 398.5 c204.2002 398.3999 205.2998 399.3999 205.3999 400.7998 c205.5 402.1001 204.3999 403.2002 203.1001 403.2998 cfUu200.3999 395.5 m200.3999 396.8257 201.4746 397.8999 202.7998 397.8999 c204.1255 397.8999 205.2002 396.8257 205.2002 395.5 c205.2002 394.1738 204.1255 393.0996 202.7998 393.0996 c201.4746 393.0996 200.3999 394.1738 200.3999 395.5 cf202.7998 395.5 mFUu202.7998 392.5 m201.5 392.4004 200.5 391.2998 200.5 390 c200.6001 388.5996 201.7002 387.5996 203.1001 387.7002 c204.3999 387.7998 205.3999 388.9004 205.3999 390.2002 c205.2998 391.5 204.2002 392.5996 202.7998 392.5 cfUu203.1001 387.0996 m201.7998 387 200.7998 385.7998 201 384.4004 c201.1001 383.0996 202.2998 382.2002 203.6001 382.2998 c204.8999 382.4004 205.8999 383.5996 205.7998 385 c205.6001 386.2998 204.3999 387.2002 203.1001 387.0996 cfUu203.7002 381.7002 m202.3999 381.5 201.5 380.2998 201.7002 379 c201.8999 377.5996 203.1001 376.7002 204.3999 377 c205.7998 377.2002 206.7002 378.4004 206.3999 379.7002 c206.2002 381 205 381.9004 203.7002 381.7002 cfUu204.5 376.4004 m203.2002 376.0996 202.3999 374.7998 202.7002 373.5 c203 372.2002 204.2002 371.4004 205.5 371.7002 c206.7998 371.9004 207.7002 373.2002 207.3999 374.5 c207.1001 375.7998 205.7998 376.7002 204.5 376.4004 cfUu205.7002 371.0996 m204.3999 370.7002 203.6001 369.4004 204 368.0996 c204.2998 366.9004 205.6001 366.0996 206.8999 366.4004 c208.2002 366.7998 209 368.0996 208.6001 369.4004 c208.2998 370.7002 207 371.4004 205.7002 371.0996 cfUu207.1001 365.9004 m205.7998 365.5 205.1001 364.0996 205.5 362.7998 c205.8999 361.5996 207.2998 360.9004 208.6001 361.2998 c209.7998 361.7002 210.5 363.0996 210.1001 364.2998 c209.7002 365.5996 208.2998 366.2998 207.1001 365.9004 cfUu208.7998 360.7002 m207.5 360.2998 206.8999 358.9004 207.3999 357.5996 c207.7998 356.4004 209.2002 355.7002 210.5 356.2002 c211.7002 356.7002 212.2998 358.0996 211.8999 359.2998 c211.3999 360.5996 210 361.2002 208.7998 360.7002 cfUu210.7002 355.7002 m209.5 355.0996 208.8999 353.7002 209.5 352.5 c210 351.2998 211.3999 350.7002 212.7002 351.2998 c213.8999 351.7998 214.3999 353.2002 213.8999 354.5 c213.2998 355.7002 211.8999 356.2002 210.7002 355.7002 cfUu212.8999 350.7002 m211.7002 350.0996 211.2002 348.7002 211.8999 347.5 c212.5 346.2998 213.8999 345.7998 215.1001 346.4004 c216.2998 347 216.7998 348.5 216.1001 349.7002 c215.5 350.9004 214.1001 351.2998 212.8999 350.7002 cfUu215.3999 345.9004 m214.2002 345.2998 213.7998 343.7998 214.5 342.5996 c215.1001 341.5 216.6001 341.0996 217.7998 341.7998 c218.8999 342.4004 219.2998 343.9004 218.7002 345 c218 346.2002 216.5 346.5996 215.3999 345.9004 cfUu218.1001 341.2002 m217 340.5 216.6001 339 217.3999 337.9004 c218.1001 336.7998 219.6001 336.5 220.7002 337.2002 c221.7998 337.9004 222.1001 339.4004 221.3999 340.5 c220.7002 341.7002 219.2002 342 218.1001 341.2002 cfUu221 336.7002 m219.8999 335.9004 219.7002 334.4004 220.5 333.4004 c221.2998 332.2998 222.7998 332 223.8999 332.7998 c224.8999 333.5996 225.2002 335.0996 224.3999 336.2002 c223.6001 337.2998 222.1001 337.5 221 336.7002 cfUu224.2002 332.2998 m223.2002 331.5 223 330 223.8999 329 c224.7002 327.9004 226.2002 327.7998 227.2002 328.5996 c228.2998 329.4004 228.3999 330.9004 227.6001 332 c226.7998 333 225.2002 333.2002 224.2002 332.2998 cfUu227.6001 328.0996 m226.6001 327.2998 226.5 325.7002 227.3999 324.7002 c228.2998 323.7998 229.7998 323.7002 230.7998 324.5996 c231.7998 325.4004 231.8999 327 231 328 c230.1001 329 228.6001 329 227.6001 328.0996 cfUu231.2002 324.0996 m230.2998 323.2002 230.2998 321.7002 231.2002 320.7002 c232.2002 319.7998 233.7002 319.7998 234.6001 320.7002 c235.6001 321.7002 235.6001 323.2002 234.6001 324.0996 c233.7002 325.0996 232.2002 325.0996 231.2002 324.0996 cfUu235.1001 320.2998 m234.2002 319.2998 234.2998 317.7998 235.2002 316.9004 c236.2002 316 237.7998 316.0996 238.6001 317.0996 c239.5 318.0996 239.5 319.5996 238.5 320.5 c237.5 321.4004 236 321.2998 235.1001 320.2998 cfUu239.1001 316.7002 m238.2998 315.7002 238.3999 314.0996 239.3999 313.2998 c240.5 312.5 242 312.5996 242.7998 313.7002 c243.7002 314.7002 243.5 316.2002 242.5 317.0996 c241.3999 317.9004 239.8999 317.7002 239.1001 316.7002 cfUu243.2998 313.2998 m242.5 312.2002 242.7002 310.7002 243.7998 309.9004 c244.8999 309.0996 246.3999 309.4004 247.2002 310.5 c248 311.5 247.7002 313 246.7002 313.7998 c245.6001 314.5996 244.1001 314.4004 243.2998 313.2998 cfUu247.7002 310.0996 m246.8999 309 247.2998 307.5 248.3999 306.7998 c249.5 306.0996 251 306.4004 251.7002 307.5 c252.3999 308.5996 252.1001 310.0996 251 310.7998 c249.8999 311.5996 248.3999 311.2002 247.7002 310.0996 cfUu252.2002 307.2002 m251.5 306 251.8999 304.5996 253.1001 303.9004 c254.2002 303.2002 255.7002 303.5996 256.3999 304.7998 c257.1001 305.9004 256.7002 307.4004 255.5 308.0996 c254.3999 308.7002 252.8999 308.2998 252.2002 307.2002 cfUu256.8999 304.5 m256.2998 303.2998 256.7998 301.7998 257.8999 301.2002 c259.1001 300.5996 260.6001 301.0996 261.2002 302.2998 c261.7998 303.5 261.2998 304.9004 260.1001 305.5 c259 306.0996 257.5 305.7002 256.8999 304.5 cfUu261.7002 302 m261.2002 300.7998 261.7002 299.4004 262.8999 298.7998 c264.2002 298.2998 265.6001 298.9004 266.1001 300.0996 c266.7002 301.2998 266.1001 302.7002 264.8999 303.2998 c263.7002 303.7998 262.2998 303.2002 261.7002 302 cfUu266.7002 299.7998 m266.2002 298.5996 266.7998 297.2002 268 296.7002 c269.2998 296.2002 270.7002 296.9004 271.2002 298.0996 c271.6001 299.2998 271 300.7002 269.7998 301.2002 c268.5 301.7002 267.1001 301.0996 266.7002 299.7998 cfUu271.7002 297.9004 m271.2998 296.5996 272 295.2998 273.2998 294.9004 c274.5 294.5 275.8999 295.0996 276.2998 296.4004 c276.7002 297.7002 276 299 274.7998 299.4004 c273.5 299.9004 272.1001 299.2002 271.7002 297.9004 cfUu276.8999 296.2002 m276.5 295 277.2998 293.5996 278.6001 293.2998 c279.7998 292.9004 281.2002 293.7002 281.5 295 c281.8999 296.2998 281.1001 297.5996 279.7998 297.9004 c278.5 298.2998 277.2002 297.5 276.8999 296.2002 cfUu282.1001 294.7998 m281.7998 293.5 282.6001 292.2998 283.8999 292 c285.2002 291.7002 286.5 292.5 286.7998 293.7998 c287.1001 295.0996 286.2002 296.4004 284.8999 296.7002 c283.6001 297 282.3999 296.0996 282.1001 294.7998 cfUu287.3999 293.7002 m287.2002 292.4004 288.1001 291.2002 289.3999 291 c290.7002 290.7998 291.8999 291.5996 292.1001 293 c292.2998 294.2998 291.3999 295.5 290.1001 295.7002 c288.7998 295.9004 287.6001 295 287.3999 293.7002 cfUu292.7002 292.9004 m292.6001 291.5996 293.5 290.4004 294.8999 290.2002 c296.2002 290.0996 297.3999 291 297.5 292.4004 c297.6001 293.7002 296.7002 294.9004 295.3999 295 c294 295.2002 292.8999 294.2002 292.7002 292.9004 cfUu298.1001 292.2998 m298 291 299 289.9004 300.3999 289.7998 c301.7002 289.7002 302.7998 290.7002 302.8999 292.0996 c303 293.4004 302 294.5 300.6001 294.5996 c299.2998 294.7002 298.2002 293.7002 298.1001 292.2998 cfUu308.9004 292 m309 290.7002 310.0996 289.7002 311.4004 289.7998 c312.7998 289.7998 313.7998 291 313.7002 292.2998 c313.5996 293.5996 312.5 294.5996 311.2002 294.5996 c309.9004 294.5 308.7998 293.4004 308.9004 292 cfUu314.2998 292.2998 m314.4004 291 315.5996 290 316.9004 290.2002 c318.2998 290.2998 319.2002 291.5 319.0996 292.7998 c319 294.2002 317.7998 295.0996 316.4004 295 c315.0996 294.7998 314.2002 293.7002 314.2998 292.2998 cfUu319.7002 292.9004 m319.9004 291.5996 321.0996 290.7002 322.4004 290.9004 c323.7002 291.0996 324.5996 292.2998 324.4004 293.7002 c324.2002 295 323 295.9004 321.7002 295.7002 c320.4004 295.5 319.5 294.2002 319.7002 292.9004 cfUu325 293.7998 m325.2998 292.5 326.5996 291.5996 327.9004 291.9004 c329.2002 292.2002 330 293.4004 329.7002 294.7998 c329.5 296.0996 328.2002 296.9004 326.9004 296.5996 c325.5996 296.2998 324.7002 295.0996 325 293.7998 cfUu330.2998 294.9004 m330.5996 293.5996 332 292.7998 333.2998 293.2002 c334.5 293.5 335.2998 294.7998 335 296.0996 c334.5996 297.4004 333.2998 298.2002 332 297.7998 c330.7002 297.5 330 296.2002 330.2998 294.9004 cfUu335.5 296.2998 m335.9004 295 337.2998 294.2998 338.5996 294.7002 c339.7998 295.0996 340.5 296.5 340.0996 297.7998 c339.7002 299 338.2998 299.7002 337.0996 299.2998 c335.7998 298.9004 335.0996 297.5996 335.5 296.2998 cfUu340.7002 298 m341.0996 296.7002 342.5 296.0996 343.7998 296.5996 c345 297 345.5996 298.4004 345.2002 299.7002 c344.7002 300.9004 343.2998 301.5996 342.0996 301.0996 c340.7998 300.5996 340.2002 299.2002 340.7002 298 cfUu345.7002 299.9004 m346.2998 298.7002 347.7002 298.0996 348.9004 298.7002 c350.0996 299.2002 350.7002 300.5996 350.0996 301.9004 c349.5996 303.0996 348.2002 303.5996 346.9004 303.0996 c345.7002 302.5 345.2002 301.0996 345.7002 299.9004 cfUu350.7002 302.0996 m351.2998 300.9004 352.7002 300.4004 353.9004 301 c355.0996 301.7002 355.5996 303.0996 355 304.2998 c354.2998 305.5 352.9004 306 351.7002 305.2998 c350.5 304.7002 350 303.2998 350.7002 302.0996 cfUu355.5 304.5996 m356.0996 303.4004 357.5996 303 358.7998 303.7002 c359.9004 304.2998 360.2998 305.7998 359.5996 307 c359 308.0996 357.5 308.5 356.4004 307.9004 c355.2002 307.2002 354.7998 305.7002 355.5 304.5996 cfUu360.0996 307.2998 m360.9004 306.2002 362.4004 305.7998 363.5 306.5996 c364.5996 307.2998 364.9004 308.7998 364.2002 309.9004 c363.5 311 362 311.2998 360.9004 310.5996 c359.7002 309.9004 359.4004 308.4004 360.0996 307.2998 cfUu364.7002 310.2002 m365.5 309.0996 367 308.9004 368 309.7002 c369.0996 310.5 369.4004 312 368.5996 313 c367.7998 314.0996 366.2998 314.4004 365.2002 313.5996 c364.0996 312.7998 363.9004 311.2998 364.7002 310.2002 cfUu369.0996 313.4004 m369.9004 312.4004 371.4004 312.2002 372.4004 313 c373.5 313.9004 373.5996 315.4004 372.7998 316.4004 c372 317.5 370.5 317.5996 369.4004 316.7998 c368.4004 316 368.2002 314.4004 369.0996 313.4004 cfUu373.2998 316.7998 m374.0996 315.7998 375.7002 315.7002 376.7002 316.5996 c377.5996 317.5 377.7002 319 376.7998 320 c376 321 374.4004 321.0996 373.4004 320.2002 c372.4004 319.2998 372.4004 317.7998 373.2998 316.7998 cfUu377.2998 320.4004 m378.2002 319.5 379.7002 319.5 380.7002 320.4004 c381.5996 321.4004 381.5996 322.9004 380.7002 323.7998 c379.7002 324.7998 378.2002 324.7998 377.2998 323.7998 c376.2998 322.9004 376.2998 321.4004 377.2998 320.4004 cfUu381.0996 324.2998 m382.0996 323.4004 383.5996 323.4004 384.5 324.4004 c385.4004 325.4004 385.2998 326.9004 384.2998 327.7998 c383.2998 328.7002 381.7998 328.5996 380.9004 327.7002 c380 326.7002 380.0996 325.0996 381.0996 324.2998 cfUu384.7002 328.2998 m385.7002 327.4004 387.2998 327.5996 388.0996 328.5996 c388.9004 329.7002 388.7998 331.2002 387.7002 332 c386.7002 332.9004 385.2002 332.7002 384.4004 331.7002 c383.5 330.5996 383.7002 329.0996 384.7002 328.2998 cfUu388.0996 332.5 m389.2002 331.7002 390.7002 331.9004 391.5 333 c392.2998 334.0996 392 335.5996 390.9004 336.4004 c389.9004 337.2002 388.4004 336.9004 387.5996 335.7998 c386.7998 334.7998 387 333.2998 388.0996 332.5 cfUu391.2998 336.9004 m392.4004 336.0996 393.9004 336.4004 394.5996 337.5996 c395.2998 338.7002 395 340.2002 393.9004 340.9004 c392.7998 341.5996 391.2998 341.2998 390.5996 340.2002 c389.9004 339.0996 390.2002 337.5996 391.2998 336.9004 cfUu394.2002 341.4004 m395.4004 340.7002 396.9004 341.0996 397.5 342.2998 c398.2002 343.4004 397.7998 344.9004 396.5996 345.5996 c395.5 346.2002 394 345.7998 393.2998 344.7002 c392.7002 343.5 393.0996 342.0996 394.2002 341.4004 cfUu396.9004 346.0996 m398.0996 345.5 399.5996 345.9004 400.2002 347.0996 c400.7998 348.2998 400.2998 349.7998 399.0996 350.4004 c397.9004 351 396.5 350.5 395.9004 349.2998 c395.2998 348.0996 395.7002 346.7002 396.9004 346.0996 cfUu399.4004 350.9004 m400.5996 350.4004 402 350.9004 402.5996 352.0996 c403.0996 353.2998 402.5996 354.7998 401.2998 355.2998 c400.0996 355.7998 398.7002 355.2998 398.2002 354.0996 c397.5996 352.9004 398.2002 351.4004 399.4004 350.9004 cfUu401.5996 355.7998 m402.7998 355.4004 404.2002 356 404.7002 357.2002 c405.2002 358.5 404.5996 359.9004 403.2998 360.2998 c402.0996 360.7998 400.7002 360.2002 400.2002 359 c399.7002 357.7002 400.2998 356.2998 401.5996 355.7998 cfUu403.5 360.9004 m404.7998 360.5 406.0996 361.2002 406.5 362.4004 c407 363.7002 406.2998 365.0996 405 365.5 c403.7002 365.9004 402.4004 365.2002 402 363.9004 c401.5996 362.7002 402.2002 361.2998 403.5 360.9004 cfUu405.2002 366 m406.5 365.7002 407.7998 366.4004 408.0996 367.7002 c408.5 369 407.7002 370.2998 406.4004 370.7002 c405.0996 371 403.7998 370.2998 403.5 369 c403.0996 367.7002 403.9004 366.4004 405.2002 366 cfUu406.5996 371.2002 m407.9004 371 409.2002 371.7998 409.4004 373.0996 c409.7002 374.4004 408.9004 375.7002 407.5996 376 c406.2998 376.2002 405 375.4004 404.7002 374.0996 c404.4004 372.7998 405.2998 371.5 406.5996 371.2002 cfUu407.7002 376.5 m409 376.2998 410.2002 377.2002 410.5 378.5 c410.7002 379.9004 409.7998 381.0996 408.5 381.2998 c407.0996 381.5 405.9004 380.5996 405.7002 379.2998 c405.5 378 406.4004 376.7002 407.7002 376.5 cfUu408.5 381.9004 m409.9004 381.7002 411.0996 382.7002 411.2002 384 c411.2998 385.2998 410.4004 386.5 409.0996 386.7002 c407.7002 386.7998 406.5 385.9004 406.4004 384.5 c406.2998 383.2002 407.2002 382 408.5 381.9004 cfUu409.0996 387.2998 m410.4004 387.2002 411.5996 388.2002 411.5996 389.5 c411.7002 390.9004 410.7002 392 409.4004 392.0996 c408 392.0996 406.9004 391.0996 406.7998 389.7998 c406.7998 388.5 407.7998 387.2998 409.0996 387.2998 cfUu308.7002 498.7998 m308.7002 500.1001 307.5 501.2002 306.2002 501.1001 c304.8999 501 303.8999 499.8999 303.8999 498.6001 c304 497.2002 305.1001 496.2002 306.5 496.2998 c307.7998 496.3999 308.7998 497.5 308.7002 498.7998 cfUu303.2002 498.6001 m303.2002 499.8999 302 501 300.7002 500.8999 c299.3999 500.7998 298.3999 499.7002 298.3999 498.3999 c298.5 497 299.6001 496 301 496.1001 c302.2998 496.2002 303.2998 497.2998 303.2002 498.6001 cfUu308.5 453.2002 m309.2002 462 l299.3999 448.6001 l308.5 453.2002 lfUu0 R0 0 0 1 K0 J 0.3 w320.2002 462 m312.0996 462 lB321 462.8999 m314.5 462.8999 lB322.0996 463.7002 m319.0996 463.7002 lB323 464.3999 m320.2002 464.3999 lB323.5 465 m320.7002 465 lB319.5996 461.1001 m313.0996 461.1001 lBU0 0 0 0 k0.2 w304.2998 467.2002 m308.9004 476.1001 l309.2002 462 l304.2998 467.2002 lbu0 0 0 1 k303.6001 292 m303.5 290.7002 304.5 289.5996 305.8999 289.5 c307.2002 289.4004 308.2998 290.4004 308.4004 291.7998 c308.5 293.0996 307.5 294.2002 306.1001 294.2998 c304.7998 294.4004 303.7002 293.4004 303.6001 292 cfUu*u300 Ar1 w 4 M278.7158 312.4932 m278.2144 312.6396 278.2339 312.6338 277.9492 312.3047 c276.666 310.8457 L276.0381 310.1279 276.103 310.0645 276.7959 309.7861 c277.335 309.5527 L277.4409 309.415 277.3477 309.168 277.1772 309.1563 c276.5684 309.3643 275.9316 309.5488 275.145 309.7939 c274.5088 309.9785 273.9067 310.1387 273.2231 310.3066 c273.1089 310.416 273.1509 310.6328 273.3232 310.7207 c273.9224 310.623 L274.498 310.5156 274.7471 310.5811 275.1719 310.9609 c275.5098 311.2598 275.9907 311.7607 276.6177 312.4023 c280.7212 316.6406 L281.1035 317.0186 281.3755 317.3057 281.3872 317.5615 c282.0913 317.4639 282.896 317.8555 282.9346 317.8438 c283.0889 317.7988 283.1729 317.7285 283.2295 317.6357 c283.3535 316.9121 283.4111 316.1787 283.5352 315.4561 c284.5923 308.752 L284.7612 307.6807 284.8286 307.5547 285.7754 307.1406 c286.0527 307.0146 L286.1782 306.8711 286.1084 306.6318 285.9526 306.6016 c285.1699 306.8594 284.4604 307.0811 283.4575 307.373 c282.6284 307.6143 281.7715 307.834 281.0923 308.0156 c280.9585 308.1309 281.0132 308.3896 281.1538 308.4404 c281.5903 308.3594 L282.3008 308.2139 282.3833 308.2813 282.3091 308.959 c281.9609 311.1357 L281.8789 311.5723 281.8213 311.5898 281.2813 311.7471 C278.7158 312.4932 lf281.2148 312.4521 m281.7549 312.2949 281.8403 312.3008 281.7847 312.6836 c281.4673 314.6074 L281.3569 315.4482 281.3188 315.75 281.2515 315.877 c281.2129 315.8877 L281.1069 315.8115 280.8501 315.5049 280.3101 314.9443 c279.0195 313.5342 L278.6885 313.1875 278.7461 313.1719 279.209 313.0361 C281.2148 312.4521 lf*UUu*u269.4961 321.7607 m269.7729 322.3125 269.7681 322.3477 269.3018 322.582 c268.2979 323.0879 L266.6484 323.9189 266.0918 324.0186 264.8945 323.291 c264.7295 323.2764 264.373 323.5049 264.3672 323.6719 c265.0278 324.2266 265.7056 324.9033 266.0615 325.2988 c266.1172 325.3203 266.1958 325.2969 266.2852 325.252 c266.3569 325.2158 266.4219 325.166 266.438 325.1094 c266.3628 324.7363 266.6074 324.5967 267.8267 323.9824 c275.1416 320.2969 L276.02 319.8545 276.3091 319.7578 276.6758 319.9512 c276.7607 319.9414 276.8457 319.9316 276.917 319.8945 c277.0249 319.8408 277.1011 319.7695 277.1172 319.7129 c276.6675 319.2646 275.9575 318.21 275.8003 317.7637 c275.6577 317.7041 275.3398 317.8311 275.2246 318.0039 c275.5059 319.1436 275.2905 319.5645 273.3721 320.5313 c272.3501 321.0469 L271.8838 321.2813 271.8525 321.2646 271.5757 320.7139 c268.728 315.0518 L268.0293 313.6611 268.1709 313.541 268.981 313.0508 c269.5996 312.6729 L269.6792 312.5186 269.5425 312.291 269.373 312.3115 c268.3462 312.8613 267.5459 313.2813 266.7568 313.6787 c265.9683 314.0762 265.1191 314.4873 263.958 315.04 c263.8413 315.1641 263.9551 315.4355 264.1138 315.4375 c264.8994 315.123 L265.7686 314.752 265.9497 314.71 266.6484 316.0986 C269.4961 321.7607 lf*UUu*u257.6255 321.4287 m257.3672 321.0732 256.3086 319.6143 256.1592 319.3066 c255.9351 319.2715 255.6733 319.3887 255.4868 319.543 c255.4077 319.9814 255.2295 320.7275 254.7666 322.5508 c253.2651 328.4834 L252.8379 330.1172 252.6455 330.9463 252.4985 331.3252 c252.4497 331.3604 252.3555 331.2305 251.8994 330.6025 c250.2212 328.29 L249.5757 327.4014 248.7998 326.2979 248.8179 325.7422 c248.835 325.457 249.0591 325.1855 249.4307 324.8418 c249.7622 324.5469 L249.8481 324.3564 249.668 324.1436 249.48 324.2266 c248.8965 324.6875 248.272 325.1602 247.6548 325.6104 c246.9731 326.1064 246.5264 326.4141 245.9409 326.8047 c245.854 326.958 245.9678 327.1836 246.1577 327.1719 c246.5581 326.9707 L246.8921 326.7813 247.2188 326.6162 247.4702 326.7227 c247.9482 326.9375 248.6968 327.9688 249.377 328.9043 c251.4165 331.7148 L252.0874 332.6396 252.2417 332.8174 251.939 333.5635 c251.8379 333.8008 251.4521 334.2266 251.251 334.4268 c251.0332 334.6396 L250.9712 334.7939 251.1592 335.0195 251.3477 334.9346 c251.9302 334.4375 252.8315 333.7988 253.2378 333.5039 c253.5786 333.2559 253.9766 332.9834 254.3838 332.7256 c254.2896 332.0146 254.9746 329.2314 255.2163 328.3672 c255.9102 325.9043 L256.1963 324.8623 256.7939 322.5059 256.9043 322.3164 c256.979 322.3164 257.022 322.375 257.1597 322.5654 c258.8379 324.877 L259.4834 325.7666 260.2588 326.8691 260.2246 327.4375 c260.208 327.7217 259.9995 327.9824 259.6284 328.3252 c259.2808 328.6328 L259.1948 328.8223 259.3745 329.0352 259.5625 328.9512 c260.1787 328.4668 260.771 328.0166 261.4038 327.5557 c262.1021 327.0469 262.5327 326.752 263.1343 326.3516 c263.2212 326.1973 263.1074 325.9727 262.9175 325.9844 c262.501 326.1973 L262.1665 326.3857 261.8564 326.5391 261.605 326.4326 c261.1108 326.2305 260.3623 325.1992 259.6821 324.2617 C257.6255 321.4287 lf*UUu*u240.1528 339.0898 m239.8062 339.4805 239.8198 339.4648 239.4038 339.3379 c237.543 338.7871 L236.6304 338.5137 236.6504 338.4248 237.0889 337.8203 c237.4204 337.3359 L237.437 337.1641 237.2261 337.0029 237.0757 337.085 c236.6714 337.585 236.2319 338.0801 235.6968 338.7061 c235.2573 339.2012 234.8335 339.6563 234.3452 340.1621 c234.3066 340.3164 234.4575 340.4775 234.6494 340.46 c235.104 340.0576 L235.5342 339.6611 235.7793 339.584 236.3403 339.6797 c236.7852 339.752 237.4585 339.9189 238.3301 340.1289 c244.0552 341.5322 L244.5791 341.6484 244.9619 341.7471 245.1079 341.9561 c245.6509 341.499 246.5396 341.4023 246.5664 341.3721 c246.6729 341.252 246.7065 341.1475 246.7051 341.0391 c246.4253 340.3613 246.0835 339.71 245.8037 339.0313 c243.1313 332.7979 L242.7036 331.8008 242.6934 331.6582 243.2744 330.8047 c243.4414 330.5498 L243.4712 330.3613 243.2852 330.1963 243.1367 330.2529 c242.6128 330.8887 242.1309 331.4531 241.438 332.2344 c240.8652 332.8799 240.2573 333.5215 239.7803 334.0361 c239.7285 334.2061 239.9121 334.3955 240.0576 334.3643 c240.3838 334.0625 L240.9072 333.5605 241.0127 333.5742 241.3105 334.1875 c242.1748 336.2148 L242.3374 336.627 242.2974 336.6729 241.9243 337.0928 C240.1528 339.0898 lf1 D242.2441 337.7256 m242.6172 337.3057 242.6924 337.2646 242.8486 337.6182 c243.604 339.415 L243.958 340.1855 244.0864 340.46 244.0962 340.6025 c244.0698 340.6328 L243.9399 340.625 243.5596 340.502 242.8047 340.3154 c240.9634 339.8096 L240.499 339.6924 240.5391 339.6475 240.8589 339.2871 C242.2441 337.7256 lf*UUu*u0 D228.6543 348.7725 m228.7129 349.2432 229.4155 350.0156 230.186 350.498 c230.3745 350.4775 230.5742 350.2002 230.5767 350.0098 c230.1499 349.2979 229.4336 347.5313 230.5137 345.8857 c231.3506 344.6104 232.3882 344.2578 233.1357 344.749 c233.834 345.207 234.1001 346.0303 233.7886 347.627 c233.6089 348.541 L233.2974 350.1387 233.3174 351.7363 234.4204 352.46 c235.6333 353.2559 237.4775 352.6895 239.0864 350.2393 c239.6592 349.3662 239.9307 348.6318 240.3384 347.7715 c240.1899 347.4092 239.4912 346.7109 238.9155 346.333 c238.75 346.3438 238.5396 346.6387 238.5259 346.8457 c238.998 347.5156 239.4336 348.6426 238.4971 350.0684 c237.6157 351.4111 236.6147 351.5479 235.9653 351.1211 c235.4507 350.7832 235.2188 349.9346 235.5171 348.5449 c235.7959 347.2393 L236.0952 345.875 236.1289 344.168 234.8916 343.3555 c233.4946 342.4395 231.5439 343.248 229.9463 345.6816 c228.9326 347.2266 228.7275 348.3398 228.6543 348.7725 cf*UUu*u223.4536 398.9902 m225.0078 398.9888 225.0522 399.1694 225.1426 400.1147 c225.1875 400.5571 L225.2905 400.6978 225.5542 400.6772 225.6128 400.5166 c225.5815 399.6318 225.5645 398.7266 225.5625 397.8418 c225.5605 396.957 225.5732 396.0117 225.6006 395.127 c225.5415 394.9658 225.2773 394.9463 225.1753 395.0869 c225.1323 395.5293 L225.0464 396.4746 225.0029 396.6558 223.4482 396.6572 c217.9937 396.6631 L216.439 396.6646 216.3945 396.4839 216.3047 395.5386 c216.2598 395.0957 L216.1567 394.9561 215.8926 394.9766 215.8345 395.1367 c215.8657 396.0215 215.8823 396.9268 215.8848 397.8516 c215.8867 398.7368 215.874 399.6416 215.8467 400.5269 c215.9058 400.6875 216.1699 400.7075 216.272 400.5664 c216.3149 400.124 L216.4009 399.1787 216.4443 398.9976 217.999 398.9961 C223.4536 398.9902 lf*UUu*u267.3457 469.3677 m266.9634 470.0938 266.79 470.251 265.9307 470.6777 c262.1792 472.6348 L261.4941 472.9878 261.27 473.0688 260.4082 472.7666 c259.9048 472.6025 L259.75 472.6377 259.6563 472.9023 259.7778 473.0146 c260.5566 473.3887 261.3105 473.7666 262.04 474.1484 c262.8232 474.5581 263.9014 475.1387 264.2969 475.3804 c264.4668 475.4028 264.625 475.188 264.5303 475.0225 c264.0308 474.6787 L263.7598 474.5039 263.6914 474.4185 263.7456 474.3145 c263.8003 474.2109 263.9468 474.1055 264.4209 473.8076 c265.7188 473.0645 266.9121 472.3491 268.1216 471.7744 c268.3325 473.1421 268.5137 474.394 268.6958 475.73 c268.7666 476.3291 268.7939 476.7075 268.7192 476.8501 c268.6509 476.98 268.4702 476.9351 268.2075 476.8306 c267.626 476.6421 L267.4541 476.668 267.3379 476.8882 267.4819 477.0449 c268.2783 477.4282 268.8364 477.7041 269.3706 477.9834 c269.9219 478.272 270.4844 478.5825 271.04 478.9077 c271.2344 478.9268 271.3438 478.7192 271.2734 478.5503 c270.7983 478.2026 L270.0522 477.6802 269.9688 477.3218 269.6436 475.6963 c269.4272 474.6406 269.2686 473.6484 269.0991 472.6333 c268.9199 471.6797 268.939 471.3423 269.4023 470.46 c269.812 469.6821 L270.5352 468.3071 270.7153 468.3521 271.6211 468.7432 c272.3247 469.0449 L272.4971 469.0195 272.6021 468.7769 272.4868 468.6504 c271.3701 468.0991 270.563 467.6934 269.7798 467.2837 c268.9614 466.8555 268.1675 466.4238 267.2207 465.895 c267.0508 465.8726 266.9102 466.0967 266.9873 466.2529 c267.5293 466.6025 L268.3315 467.105 268.4712 467.2275 267.748 468.6025 C267.3457 469.3677 lf*UUu*u224.4839 362.3242 m222.9893 361.8857 222.9976 361.7002 223.1636 360.7646 c223.2168 360.4238 L223.1577 360.2607 222.9126 360.21 222.811 360.3477 c222.6143 361.127 222.375 362 222.127 362.8477 c221.8735 363.7168 221.6064 364.5801 221.3301 365.4199 c221.3413 365.5908 221.5757 365.6807 221.7139 365.5742 c221.8799 365.1621 L222.2432 364.2852 222.3364 364.123 223.8306 364.5625 c227.0596 365.5088 L229.0049 366.0801 230.4043 367.3691 229.6216 370.0498 c228.8838 372.5771 227.1841 373.209 225.041 372.5801 c223.2783 372.0635 L222.2212 371.7529 220.9155 371.3496 220.6079 370.8818 c220.4473 370.6465 220.4385 370.3096 220.5229 369.8105 c220.5933 369.4121 L220.5454 369.21 220.2856 369.1543 220.1875 369.3369 c220.0239 370.001 219.8242 370.7383 219.6045 371.4902 c219.3682 372.3008 219.2021 372.8174 218.9653 373.5205 c218.9907 373.6953 219.2051 373.8008 219.3491 373.6748 c219.5435 373.2715 L219.7065 372.9219 219.8643 372.5898 220.1294 372.5215 c220.6313 372.375 221.8721 372.7393 222.9858 373.0664 c224.6636 373.5586 L225.9463 373.9346 227.2095 374.0117 228.292 373.2402 c229.3745 372.4688 230.0645 371.1016 230.4531 369.7705 c230.9824 367.957 231.0718 366.6016 230.7104 365.5332 c230.3579 364.4863 229.4888 363.793 228.0649 363.375 C224.4839 362.3242 lf*UUu*u223.6587 390.3604 m224.0957 390.4131 225.8882 390.6309 226.2163 390.7314 c226.396 390.5918 226.4883 390.3184 226.5029 390.0771 c226.2354 389.7207 225.8105 389.082 224.79 387.5 c221.4673 382.3564 L220.561 380.9307 220.085 380.2246 219.9077 379.8594 c219.915 379.7988 220.0752 379.8184 220.8477 379.9121 c223.689 380.2568 L224.7817 380.3896 226.1201 380.5732 226.5161 380.9648 c226.7129 381.1719 226.7588 381.5215 226.7568 382.0273 c226.7471 382.4717 L226.8271 382.6641 227.1064 382.6777 227.1743 382.4844 c227.2354 381.7422 227.3149 380.9619 227.4072 380.2031 c227.5093 379.3643 227.5894 378.8271 227.7031 378.1318 c227.6499 377.9639 227.4072 377.8936 227.2856 378.041 c227.1592 378.4707 L227.0693 378.8457 226.9678 379.1973 226.7173 379.3086 c226.2344 379.5137 224.9663 379.3594 223.8154 379.2197 c220.3618 378.7998 L219.2251 378.6621 218.9893 378.6543 218.6494 377.9238 c218.5449 377.6875 218.4961 377.1152 218.4863 376.8311 c218.479 376.5264 L218.4087 376.375 218.1147 376.3604 218.0469 376.5547 c218.0127 377.3203 217.8647 378.416 217.8042 378.915 c217.7534 379.335 217.6807 379.8125 217.5933 380.2861 c218.1787 380.7021 219.75 383.1006 220.2188 383.8662 c221.5503 386.0527 L222.1187 386.9727 223.4375 389.0166 223.5005 389.2275 c223.4497 389.2813 223.377 389.2725 223.1436 389.2441 c220.3022 388.8994 L219.209 388.7666 217.8711 388.584 217.4775 388.1719 c217.2808 387.9648 217.2324 387.6357 217.2344 387.1289 c217.2466 386.665 L217.1665 386.4727 216.8872 386.459 216.8193 386.6563 c216.7539 387.4375 216.6787 388.1777 216.584 388.957 c216.4795 389.8154 216.4019 390.332 216.2852 391.0439 c216.3389 391.2129 216.582 391.2832 216.7031 391.1357 c216.832 390.6855 L216.9214 390.3115 217.021 389.9785 217.2715 389.8682 c217.7568 389.6436 219.0249 389.7979 220.1758 389.9375 C223.6587 390.3604 lf*UUu*u223.8184 411.166 m225.0313 410.186 226.603 409.0146 227.2974 408.5732 c227.3354 408.5273 227.3428 408.3643 227.3232 408.2246 c227.3037 408.0854 227.2554 407.9502 227.1982 407.8564 c226.583 407.6982 225.8267 407.478 225.166 407.2041 c218.5605 404.5674 L217.5093 404.145 217.2808 403.9941 217.0537 403.2134 c216.915 402.7456 L216.7939 402.6206 216.5322 402.6567 216.5161 402.8618 c216.6528 403.6343 216.7861 404.4888 216.8936 405.2656 c217.0181 406.1616 217.0972 406.8408 217.2148 407.8999 c217.3267 408.0669 217.5625 408.0547 217.6392 407.8613 c217.6572 407.3516 L217.6694 406.9033 217.7202 406.7339 217.8364 406.7178 c217.9673 406.6997 218.3091 406.8145 219.9058 407.4258 c222.6929 408.501 L223.397 408.7686 224.3296 409.1875 224.6914 409.3403 c223.0083 410.6689 221.1675 412.1421 219.3364 413.4712 c218.7988 413.8706 218.6743 413.8267 218.4893 413.2437 c218.3076 412.6802 L218.1719 412.5566 217.9419 412.6089 217.8911 412.7788 c218.0337 413.5913 218.1421 414.2666 218.2305 414.9038 c218.3301 415.6206 218.4063 416.2798 218.4546 416.8408 c218.5498 416.9897 218.7793 416.9375 218.8818 416.8218 c218.8857 416.314 L218.895 415.8462 218.936 415.394 219.3105 414.9971 c219.9312 414.3428 220.8257 413.6304 222.1699 412.5308 C223.8184 411.166 lf*UUu*u221.6553 421.21 m220.1802 421.6968 220.082 421.5391 219.6875 420.6763 c219.5586 420.3809 L219.417 420.2798 219.1729 420.3813 219.1675 420.5518 c219.4355 421.2666 219.7461 422.1567 220.0244 422.9946 c221.231 426.6318 L221.6353 427.8506 221.9878 428.96 222.042 429.2163 c222.3037 429.2148 223.4409 428.9663 224.0771 428.8828 c224.1636 428.77 224.0649 428.3799 223.9307 428.2549 c223.0225 428.2168 222.5801 428.0459 222.2666 427.4731 c222.0239 427.0674 221.8066 426.5054 221.6357 425.9912 c221.2124 424.7153 L220.9409 423.8965 220.9688 423.8872 221.7622 423.6255 c224.1138 422.8491 L224.4756 422.73 224.4961 422.7441 224.6411 423.1821 c224.9443 424.0962 L225.4941 425.7529 225.5874 426.0815 225.0332 426.4121 c224.6045 426.7017 L224.5576 426.8862 224.6777 427.248 224.8203 427.311 c225.1899 427.168 225.6782 426.9644 226.1929 426.7944 c226.7217 426.6201 227.2217 426.4971 227.6733 426.3652 c227.7393 426.2378 227.6191 425.876 227.4849 425.751 c226.8843 425.8013 L226.2554 425.8608 226.1201 425.5464 225.5708 423.8896 c225.2676 422.9756 L225.1221 422.5376 225.1436 422.5093 225.4917 422.3945 c227.2588 421.8115 L227.9688 421.5771 228.4824 421.4497 228.8135 421.6572 c229.084 421.8218 229.3027 422.1084 229.8335 423.708 c230.6636 426.1177 230.3989 426.6694 229.4927 427.708 c229.4521 427.9116 229.6016 428.2217 229.7788 428.29 c230.3252 427.9829 231.2437 427.2148 231.5313 426.8242 c231.2251 425.9956 230.668 424.3623 229.9292 422.1343 c229.209 419.9634 L228.9307 419.1255 228.5596 417.9595 228.3032 417.0933 c228.1968 416.9595 227.9399 417.0229 227.8867 417.1885 c228.0649 417.9111 L228.292 418.8291 228.3071 419.0146 226.832 419.5015 C221.6553 421.21 lf*UUu*u227.0215 434.751 m225.7969 435.4453 225.6338 435.5146 225.1045 434.729 c224.8086 434.2959 L224.6499 434.2241 224.4458 434.3398 224.4614 434.5161 c225.0088 435.6611 225.8125 437.1689 226.6245 438.603 c227.397 439.9668 228.1978 441.0835 228.9395 441.6797 c229.7891 442.376 230.7549 442.6831 231.6733 442.1621 c232.8472 441.4971 232.731 439.9229 232.5005 438.9214 c232.4795 438.7944 232.6016 438.7715 232.7173 438.7983 c235.2319 439.2207 236.8115 439.4805 237.7744 440.02 c238.3579 440.3359 238.7212 440.7998 238.853 441.0024 c238.9536 441.061 239.0938 440.9814 239.1279 440.8926 c239.0474 440.6611 238.8975 440.3071 238.5508 439.6953 c237.6001 438.0166 236.5879 437.3892 234.7974 436.9951 c233.9941 436.8271 233.0151 436.7354 232.2803 436.5977 c231.7192 436.4995 231.5591 436.3364 231.2324 435.7593 c230.9355 435.2344 230.938 435.21 231.2061 435.0581 c232.8389 434.1323 L234.1909 433.3657 234.3184 433.5015 234.8604 434.2798 c235.1167 434.6426 L235.2754 434.7144 235.4951 434.5669 235.4668 434.3979 c235.0054 433.6431 234.5469 432.8633 234.1113 432.0938 c233.6758 431.3247 233.2427 430.5303 232.8125 429.7114 c232.6826 429.6006 232.4229 429.6782 232.4229 429.8862 c232.6025 430.293 L232.9917 431.1582 233.0425 431.3369 231.6899 432.104 C227.0215 434.751 lf1 D230.0068 435.7378 m230.415 435.5063 230.4409 435.4922 230.916 436.3311 c231.8867 438.0449 231.7197 439.1792 230.5078 439.8662 c229.5 440.4375 228.1152 440.0449 227.2534 438.5234 c226.7383 437.6143 226.7671 437.5752 227.3535 437.2422 C230.0068 435.7378 lf*UUu*u0 D240.625 443.4766 m240.1567 443.3984 239.2148 443.8511 238.5322 444.4531 c238.4976 444.6396 238.7065 444.9106 238.8887 444.9678 c239.6934 444.7622 241.5923 444.5801 242.8604 446.0874 c243.8438 447.2563 243.8843 448.353 243.2002 448.9302 c242.5605 449.4692 241.6953 449.4893 240.2539 448.7329 c239.4282 448.2988 L237.9868 447.5425 236.4487 447.1045 235.4395 447.9561 c234.3291 448.8926 234.3447 450.8252 236.2339 453.0708 c236.9067 453.8706 237.5327 454.3418 238.2417 454.9795 c238.6309 454.9404 239.5005 454.4702 240.0278 454.0254 c240.064 453.8633 239.8423 453.5771 239.6475 453.5049 c238.8701 453.7661 237.6655 453.8613 236.5659 452.5542 c235.5308 451.3237 235.687 450.3242 236.2813 449.8228 c236.7524 449.4253 237.6323 449.4458 238.8789 450.1299 c240.0513 450.771 L241.2734 451.4492 242.9004 451.9702 244.0332 451.0146 c245.312 449.936 245.0947 447.8315 243.2183 445.6016 c242.0278 444.1865 241.0186 443.6704 240.625 443.4766 cf*UUu*u249.9463 456.0488 m251.019 454.9243 251.1797 455.0176 251.9224 455.6064 c252.272 455.8804 L252.4443 455.9033 252.6123 455.6982 252.5366 455.5449 c251.8779 454.9551 251.2148 454.3408 250.5762 453.73 c249.9375 453.1191 249.2656 452.4561 248.6475 451.8237 c248.4912 451.7549 248.2944 451.9321 248.3252 452.1035 c248.6138 452.4409 L249.2354 453.1572 249.3354 453.314 248.2632 454.438 c244.5 458.3828 L243.4277 459.5068 243.2666 459.4136 242.5239 458.8247 c242.1743 458.5513 L242.002 458.5283 241.8345 458.7329 241.9097 458.8906 c242.5684 459.4805 243.2319 460.0947 243.8994 460.7334 c244.5376 461.3442 245.1807 461.98 245.7988 462.6079 c245.9556 462.6768 246.1519 462.4995 246.1211 462.3281 c245.8325 461.9907 L245.2109 461.2744 245.1108 461.1177 246.1831 459.9937 C249.9463 456.0488 lf*UUu*u253.2026 467.0415 m252.8467 467.5439 252.813 467.5566 252.3877 467.2544 c251.4717 466.6045 L249.9668 465.5361 249.6187 465.0908 249.7007 463.6924 c249.6372 463.5391 249.2681 463.3311 249.1177 463.4043 c248.9375 464.248 248.6572 465.1636 248.4746 465.6636 c248.4819 465.7227 248.5391 465.7813 248.6206 465.8394 c248.686 465.8857 248.7598 465.9204 248.8184 465.9077 c249.1118 465.6665 249.3496 465.8169 250.4619 466.6064 c257.1357 471.3442 L257.937 471.9136 258.1572 472.1235 258.1582 472.5381 c258.2065 472.6084 258.2554 472.6787 258.3208 472.7251 c258.4189 472.7949 258.5176 472.8291 258.5757 472.8164 c258.7598 472.2095 259.3589 471.0879 259.6792 470.7402 c259.6655 470.5864 259.4043 470.3647 259.1978 470.3442 c258.3232 471.1265 257.8511 471.1328 256.1011 469.8906 c255.1685 469.2285 L254.7432 468.9268 254.7441 468.8911 255.1001 468.3887 c258.7651 463.2207 L259.6646 461.9526 259.8374 462.0215 260.6484 462.5073 c261.2715 462.8774 L261.4453 462.875 261.5815 462.6479 261.4844 462.5073 c260.519 461.8579 259.7744 461.3472 259.0547 460.8364 c258.335 460.3252 257.5747 459.7676 256.5449 459.0005 c256.3799 458.9556 256.1938 459.1831 256.2661 459.3242 c256.9106 459.8716 L257.6455 460.4653 257.7671 460.6055 256.8677 461.874 C253.2026 467.0415 lf*UUu*u312.8184 308.7246 m312.2998 308.6689 312.3193 308.6719 312.1807 308.2578 c311.5498 306.4199 L311.2412 305.5176 311.3262 305.4814 312.0723 305.4883 c312.6602 305.4775 L312.8105 305.3896 312.8184 305.125 312.665 305.0498 c312.0225 305.0107 311.3643 304.9395 310.543 304.8672 c309.8848 304.7969 309.2666 304.7158 308.5703 304.6113 c308.4229 304.6689 308.3799 304.8857 308.5059 305.0332 c309.0967 305.1689 L309.6699 305.29 309.876 305.4443 310.124 305.958 c310.3232 306.3633 310.5771 307.0098 310.9131 307.8418 c313.0947 313.3281 L313.3047 313.8232 313.4473 314.1914 313.3604 314.4336 c314.0488 314.6104 314.6445 315.2793 314.6846 315.2832 c314.8438 315.3008 314.9482 315.2676 315.0361 315.2031 c315.4258 314.5811 315.7588 313.9229 316.1484 313.3008 c319.6768 307.4961 L320.2402 306.5684 320.3516 306.4766 321.3838 306.4541 c321.6885 306.4424 L321.8594 306.3574 321.8848 306.1094 321.7529 306.0215 c320.9307 305.9639 320.1904 305.8984 319.1514 305.7871 c318.293 305.6953 317.418 305.5732 316.7197 305.4834 c316.5518 305.5391 316.5049 305.7988 316.6143 305.9004 c317.0498 305.9902 L317.7627 306.126 317.8135 306.2197 317.4863 306.8193 c316.3359 308.7021 L316.0938 309.0752 316.0342 309.0684 315.4756 309.0098 C312.8184 308.7246 lf1 D315.1455 309.6377 m315.7051 309.6973 315.7813 309.7354 315.584 310.0684 c314.5586 311.7285 L314.1357 312.4658 313.9873 312.7305 313.877 312.8223 c313.8359 312.8174 L313.7676 312.7061 313.6465 312.3242 313.3604 311.6016 c312.7031 309.8047 L312.5283 309.3574 312.5889 309.3643 313.0684 309.415 C315.1455 309.6377 lf*UUu*u0 D324.9854 314.3203 m324.5977 315.6738 324.5293 315.8379 323.6025 315.6465 c323.0889 315.5439 L322.9258 315.6035 322.8604 315.8301 322.9951 315.9443 c324.1855 316.3799 325.8135 316.8955 327.3945 317.3525 c328.8984 317.7871 330.251 318.0244 331.1973 317.9307 c332.2891 317.835 333.1934 317.3779 333.4844 316.3633 c333.8564 315.0654 332.6729 314.0215 331.8086 313.4668 c331.7051 313.3906 331.7764 313.2891 331.877 313.2266 c333.9658 311.7695 335.2744 310.8496 336.3389 310.5605 c336.9756 310.3789 337.5596 310.4561 337.7949 310.5078 c337.9072 310.4805 337.9521 310.3242 337.9141 310.2383 c337.6943 310.1289 337.3398 309.9805 336.665 309.7852 c334.8145 309.251 333.6533 309.5117 332.1006 310.4824 c331.4102 310.9238 330.6475 311.5439 330.0273 311.96 c329.5586 312.2832 329.3301 312.2773 328.6934 312.0938 c328.1152 311.9268 328.1006 311.9072 328.1855 311.6113 c328.7021 309.8066 L329.1309 308.3125 329.3174 308.3203 330.248 308.4971 c330.6846 308.5771 L330.8477 308.5176 330.9014 308.2578 330.7627 308.1572 c329.9063 307.9404 329.0342 307.7031 328.1855 307.459 c327.3369 307.2139 326.4727 306.9492 325.5938 306.6641 c325.4229 306.6768 325.293 306.9141 325.4385 307.0625 c325.8506 307.2266 L326.7324 307.5742 326.8936 307.666 326.4648 309.1602 C324.9854 314.3203 lf1 D327.8047 312.9365 m327.9346 312.4854 327.9424 312.457 328.8682 312.7246 c330.7588 313.2705 331.4316 314.1973 331.0479 315.5371 c330.7285 316.6514 329.4658 317.3398 327.7881 316.8555 c326.7852 316.5654 326.7773 316.5176 326.9639 315.8691 C327.8047 312.9365 lf*UUu*u0 D339.1035 318.9395 m338.5615 320.2383 338.4746 320.3936 337.5771 320.0957 c337.0781 319.9355 L336.9102 319.9766 336.8193 320.1924 336.9395 320.3223 c337.75 320.7246 339.0723 321.3584 341.1084 322.2109 c342.6631 322.8623 343.9482 323.2734 344.9277 323.2705 c345.9316 323.2617 346.6025 322.9063 346.957 322.0537 c347.291 321.2549 346.749 320.3125 345.583 319.459 c345.5146 319.4141 345.4941 319.3574 345.5059 319.3311 c345.5176 319.3037 345.5654 319.293 345.6875 319.3125 c347.1621 319.7383 349.0117 319.7344 349.6504 318.2051 c349.9102 317.582 349.915 316.7891 349.2725 315.9316 c348.623 315.04 347.4971 314.2979 345.3867 313.4141 c344.5723 313.0732 343.7773 312.7881 343.0742 312.4941 c342.2607 312.1523 341.3965 311.7754 340.5928 311.4063 c340.4229 311.3984 340.3018 311.6348 340.3926 311.7832 c340.7822 311.9941 L341.6191 312.4404 341.7686 312.5508 341.1699 313.9854 C339.1035 318.9395 lf1 D343.1982 315.1689 m343.7119 313.9375 344.1064 313.5137 345.7168 314.1885 c346.9932 314.7227 347.8682 315.8057 347.3652 317.0098 c346.7842 318.4043 345.1445 318.6865 343.0898 317.8262 c342.2754 317.4854 342.2725 317.3887 342.3857 317.1182 C343.1982 315.1689 lf341.8721 318.3496 m342.0186 317.998 342.0801 318.0068 342.8193 318.3174 c344.5596 319.0459 345.1465 319.8799 344.6387 321.0977 c344.1416 322.2891 342.7402 322.2588 341.5938 321.7783 c340.668 321.3906 340.623 321.3398 340.8496 320.7988 C341.8721 318.3496 lf*UUu*u0 D354.1846 322.8604 m353.7578 322.5605 353.7744 322.5723 353.8535 322.1445 c354.1924 320.2334 L354.3613 319.2959 354.4521 319.3066 355.1016 319.6729 c355.6191 319.9482 L355.793 319.9453 355.9277 319.7188 355.8301 319.5781 c355.2891 319.2324 354.7471 318.8516 354.0664 318.3896 c353.5254 318.0078 353.0254 317.6387 352.4678 317.21 c352.3105 317.1895 352.168 317.3574 352.207 317.5459 c352.6563 317.9521 L353.0986 318.335 353.2031 318.5703 353.1719 319.1387 c353.1494 319.5889 353.0586 320.2764 352.9482 321.166 c352.1963 327.0127 L352.1396 327.5469 352.0859 327.9375 351.8936 328.1064 c352.4082 328.5947 352.6045 329.4668 352.6367 329.4902 c352.7686 329.582 352.875 329.6045 352.9834 329.5908 c353.625 329.2363 354.2344 328.8232 354.875 328.4688 c360.7666 325.1143 L361.709 324.5771 361.8486 324.5508 362.7617 325.0322 c363.0332 325.1689 L363.2227 325.1777 363.3662 324.9746 363.2939 324.834 c362.6045 324.3848 361.9893 323.9688 361.1357 323.3682 c360.4307 322.8721 359.7256 322.3398 359.1602 321.9229 c358.9863 321.8906 358.8184 322.0938 358.8672 322.2354 c359.2021 322.5264 L359.7588 322.9893 359.7578 323.0957 359.1816 323.4609 c357.2656 324.5469 L356.875 324.7549 356.8252 324.7207 356.3652 324.3975 C354.1846 322.8604 lf1 D355.7734 324.7852 m356.2324 325.1094 356.2813 325.1797 355.9482 325.375 c354.248 326.3271 L353.5234 326.7646 353.2646 326.9229 353.124 326.9492 c353.0918 326.9268 L353.085 326.7969 353.1641 326.4043 353.2646 325.6328 c353.5605 323.7471 L353.625 323.2725 353.6738 323.3066 354.0684 323.585 C355.7734 324.7852 lf*UUu*u0 D361.334 333.4951 m360.3398 334.4863 360.2012 334.5957 359.4814 333.9805 c359.082 333.6426 L358.9102 333.6143 358.7441 333.7803 358.8066 333.9453 c359.6377 334.9023 360.8125 336.1406 361.9766 337.3057 c363.084 338.4141 364.1523 339.2764 365.0254 339.6543 c366.0293 340.0986 367.04 340.1396 367.7861 339.3955 c368.7393 338.4453 368.209 336.9609 367.7207 336.0586 c367.666 335.9424 367.7773 335.8887 367.8975 335.8828 c370.4307 335.625 372.0215 335.457 373.0918 335.7227 c373.7383 335.8721 374.2119 336.2217 374.3926 336.3818 c374.5049 336.4111 374.6191 336.2979 374.6279 336.2031 c374.4893 336.002 374.25 335.7012 373.7529 335.2041 c372.3906 333.8398 371.249 333.5039 369.4199 333.5986 c368.6016 333.6484 367.6348 333.8193 366.8896 333.8809 c366.3232 333.9355 366.126 333.8203 365.6582 333.3516 c365.2314 332.9258 365.2285 332.9014 365.4453 332.6846 c366.7725 331.3613 L367.8701 330.2676 368.0293 330.3643 368.7578 330.9697 c369.1016 331.251 L369.2734 331.2783 369.4453 331.0781 369.373 330.9229 c368.7285 330.3184 368.0801 329.6895 367.4551 329.0645 c366.8311 328.4395 366.2021 327.79 365.5703 327.1152 c365.415 327.0439 365.1865 327.1875 365.2422 327.3867 c365.5225 327.7305 L366.127 328.46 366.2236 328.6191 365.126 329.7139 C361.334 333.4951 lf1 D364.4727 333.6553 m364.8037 333.3242 364.8242 333.3047 365.5059 333.9854 c366.8965 335.3779 367.0371 336.5137 366.0527 337.4941 c365.2344 338.3105 363.7959 338.2988 362.5615 337.0625 c361.8232 336.3242 361.8398 336.2793 362.3164 335.8037 C364.4727 333.6553 lf*UUu*u0 D375.8965 343.2236 m375.5957 342.7979 375.6074 342.8145 375.8271 342.4395 c376.79 340.7559 L377.2666 339.9307 377.3486 339.9707 377.8359 340.5361 c378.2305 340.9697 L378.3955 341.0254 378.5996 340.8574 378.5557 340.6934 c378.1611 340.1855 377.7803 339.6436 377.2939 338.9795 c376.9141 338.4375 376.5674 337.9209 376.1875 337.3301 c376.0469 337.2568 375.8555 337.3672 375.8281 337.5576 c376.1143 338.0918 L376.4023 338.6016 376.4209 338.8574 376.1992 339.3809 c376.0264 339.7979 375.708 340.4141 375.3037 341.2129 c372.6221 346.459 L372.3887 346.9414 372.2051 347.291 371.9668 347.3857 c372.2871 348.0186 372.1777 348.9043 372.2012 348.9375 c372.293 349.0684 372.3867 349.125 372.4932 349.1484 c373.2168 349.0332 373.9297 348.8496 374.6543 348.7334 c381.3359 347.5664 L382.4043 347.3789 382.5449 347.4023 383.2432 348.1631 c383.4521 348.3838 L383.6279 348.4561 383.8311 348.3125 383.8105 348.1582 c383.3125 347.5029 382.873 346.9043 382.2725 346.0518 c381.7764 345.3457 381.292 344.6064 380.9004 344.0225 c380.748 343.9336 380.5205 344.0684 380.5176 344.2168 c380.7354 344.6035 L381.1035 345.2275 381.0664 345.3271 380.4014 345.4766 c378.2295 345.8516 L377.79 345.9141 377.7559 345.8652 377.4326 345.4063 C375.8965 343.2236 lf1 D376.7432 345.5723 m377.0664 346.0313 377.0889 346.1133 376.709 346.1846 c374.7861 346.5059 L373.9561 346.6738 373.6582 346.7354 373.5176 346.7129 c373.4941 346.6797 L373.5313 346.5547 373.7383 346.2129 374.0938 345.5225 c375.0098 343.8477 L375.2305 343.4229 375.2646 343.4727 375.542 343.8652 C376.7432 345.5723 lf*UUu*u0 D297.3867 312.752 m297.4814 314.1553 297.4736 314.332 296.5371 314.4688 c296.019 314.5479 L295.8857 314.6602 295.9014 314.8936 296.0669 314.9561 c296.9722 314.9531 298.4399 314.9277 300.6436 314.7783 c302.3267 314.6641 303.6611 314.4561 304.5366 314.0146 c305.4316 313.5576 305.8726 312.9404 305.8101 312.0195 c305.752 311.1572 304.8457 310.5576 303.4204 310.3164 c303.3394 310.3066 303.2959 310.2656 303.2939 310.2363 c303.292 310.207 303.3301 310.1758 303.4482 310.1387 c304.959 309.8604 306.6143 309.0273 306.502 307.376 c306.4561 306.7031 306.106 305.9932 305.1475 305.5146 c304.167 305.0088 302.8281 304.8496 300.5439 305.0039 c299.6626 305.0645 298.8242 305.165 298.0625 305.2168 c297.1812 305.2764 296.2383 305.3262 295.355 305.3564 c295.1987 305.4258 295.1963 305.6895 295.3438 305.7832 c295.7876 305.7969 L296.7349 305.8203 296.9185 305.8525 297.0234 307.4023 C297.3867 312.752 lf1 D299.3682 307.5518 m299.2783 306.2207 299.4419 305.666 301.1846 305.5479 c302.5669 305.4551 303.834 306.0293 303.9224 307.3311 c304.0244 308.8359 302.6826 309.8232 300.4585 309.9736 c299.5771 310.0332 299.5313 309.9482 299.5112 309.6563 C299.3682 307.5518 lf299.6016 310.9863 m299.5757 310.6064 299.6348 310.5879 300.436 310.5332 c302.3193 310.4063 303.2178 310.8887 303.3066 312.2041 c303.394 313.4902 302.1265 314.0898 300.8843 314.1738 c299.8828 314.2422 299.8208 314.2168 299.7808 313.6318 C299.6016 310.9863 lf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_pattern_AI5 /terminate get execAGM_Gradient /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF